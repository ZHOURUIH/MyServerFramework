#include "GameHeader.h"

// 下面包含自动生成的代码,以// FrameSystem,// MySQL,// SQLite为起始,以第一个空行或者}为结束
namespace GameBase
{
	// FrameSystem Define
	AccountManager* mAccountManager;
	AchivementManager* mAchivementManager;
	ActivityTerritorySystem* mActivityTerritorySystem;
	MonsterWarSystem* mMonsterWarSystem;
	ShabakeBattleSystem* mShabakeBattleSystem;
	WorldBossSystem* mWorldBossSystem;
	AuctionSystem* mAuctionSystem;
	DTBuilderManager* mDTBuilderManager;
	StateManager* mStateManager;
	ChatSystem* mChatSystem;
	ConditionManager* mConditionManager;
	GameConfigSystem* mGameConfigSystem;
	DebugSystem* mDebugSystem;
	EnvironmentSystem* mEnvironmentSystem;
	ExchangeManager* mExchangeManager;
	GameVerifySystem* mGameVerifySystem;
	GuildManager* mGuildManager;
	LoginGateSystem* mLoginGateSystem;
	LotteryTicketSystem* mLotteryTicketSystem;
	MailManager* mMailManager;
	MissionManager* mMissionManager;
	MonsterManager* mMonsterManager;
#ifdef _MYSQL
	MySQLCheckSystem* mMySQLCheckSystem;
#endif
	NPCManager* mNPCManager;
	ObjectItemManager* mObjectItemManager;
	OfferRewardManager* mOfferRewardManager;
	PKArenaSystem* mPKArenaSystem;
	PKModeManager* mPKModeManager;
	QQMailSystem* mQQMailSystem;
	RankSystem* mRankSystem;
	RedEnvelopeSystem* mRedEnvelopeSystem;
	SceneCopyManager* mSceneCopyManager;
	SceneMapManager* mSceneMapManager;
	SceneTriggerManager* mSceneTriggerManager;
	SeasonSystem* mSeasonSystem;
	ServerGlobalSystem* mServerGlobalSystem;
	ShoppingMallSystem* mShoppingMallSystem;
	GameNetServerMiscSystem* mGameNetServerMiscSystem;
	TeamManager* mTeamManager;
	TreasureHouseSystem* mTreasureHouseSystem;
	AccountPool* mAccountPool;
	AccountSellInfoPool* mAccountSellInfoPool;
	AchivementPool* mAchivementPool;
	ActivityGuildDataPool* mActivityGuildDataPool;
	AuctionItemPool* mAuctionItemPool;
	AuctionPriceInfoPool* mAuctionPriceInfoPool;
	AuctionSearchParamPool* mAuctionSearchParamPool;
	CharacterBehaviourPool* mCharacterBehaviourPool;
	CharacterSkillPool* mCharacterSkillPool;
	ConditionPool* mConditionPool;
	DamageInfoPool* mDamageInfoPool;
	DamageTokenBulletPool* mDamageTokenBulletPool;
	DamageTokenSkillPool* mDamageTokenSkillPool;
	EquipCollectionPool* mEquipCollectionPool;
	ExchangeInfoPool* mExchangeInfoPool;
	ExchangePlayerPool* mExchangePlayerPool;
	FunctionParamPool* mFunctionParamPool;
	GuildPool* mGuildPool;
	GuildRequestInfoPool* mGuildRequestInfoPool;
	GuildShopGoodsPool* mGuildShopGoodsPool;
	GuildTerritoryDataPool* mGuildTerritoryDataPool;
	LotteryTicketPlayerPool* mLotteryTicketPlayerPool;
	MailPool* mMailPool;
	MissionPool* mMissionPool;
	MonsterFireSkillInfoPool* mMonsterFireSkillInfoPool;
	MonsterGeneratePool* mMonsterGeneratePool;
	MonsterMoveInfoPool* mMonsterMoveInfoPool;
	MonsterWarPool* mMonsterWarPool;
	NPCGoodsItemPool* mNPCGoodsItemPool;
	ObjectItemPool* mObjectItemPool;
	ObjectItemSpecificPool* mObjectItemSpecificPool;
	OfferRewardPool* mOfferRewardPool;
	PKArenaSingleInstancePool* mPKArenaSingleInstancePool;
	PKSingleMatchInfoPool* mPKSingleMatchInfoPool;
	PKSinglePlayerInfoPool* mPKSinglePlayerInfoPool;
	PlayerServerDataPool* mPlayerServerDataPool;
	PlayerVerifyDataPool* mPlayerVerifyDataPool;
	QQVerifyInfoPool* mQQVerifyInfoPool;
	RankInfoPool* mRankInfoPool;
	RedEnvelopePool* mRedEnvelopePool;
	SceneCopyPool* mSceneCopyPool;
	SceneMapPool* mSceneMapPool;
	SceneSkillInfoPool* mSceneSkillInfoPool;
	SceneTriggerPool* mSceneTriggerPool;
	ShabakeBattleGuildInfoPool* mShabakeBattleGuildInfoPool;
	ShabakeBattleMemberDataPool* mShabakeBattleMemberDataPool;
	SkillBulletParamPool* mSkillBulletParamPool;
	SkillBulletPool* mSkillBulletPool;
	TeamInfoPool* mTeamInfoPool;
	TerritoryMapDataPool* mTerritoryMapDataPool;
	TriggerModifierPool* mTriggerModifierPool;
	WorldBossPlayerInfoPool* mWorldBossPlayerInfoPool;
	AchivementFactoryManager* mAchivementFactoryManager;
	CharacterBehaviourFactoryManager* mCharacterBehaviourFactoryManager;
	CharacterSkillFactoryManager* mCharacterSkillFactoryManager;
	ConditionFactoryManager* mConditionFactoryManager;
	MonsterGenerateFactoryManager* mMonsterGenerateFactoryManager;
	ObjectItemFactoryManager* mObjectItemFactoryManager;
	ObjectItemSpecificFactoryManager* mObjectItemSpecificFactoryManager;
	SceneTriggerFactoryManager* mSceneTriggerFactoryManager;
	TriggerModifierFactoryManager* mTriggerModifierFactoryManager;

	// MySQL Define
	MySQLAccount* mMySQLAccount;
	MySQLCharacterBase* mMySQLCharacterBase;
	MySQLCharacterEquip* mMySQLCharacterEquip;
	MySQLCharacterBaseProperty* mMySQLCharacterBaseProperty;
	MySQLCharacterAsset* mMySQLCharacterAsset;
	MySQLCharacterAddup* mMySQLCharacterAddup;
	MySQLEquipCollection* mMySQLEquipCollection;
	MySQLObjectItemBox* mMySQLObjectItemBox;
	MySQLObjectItemConsumable* mMySQLObjectItemConsumable;
	MySQLObjectItemEquip* mMySQLObjectItemEquip;
	MySQLObjectItemID* mMySQLObjectItemID;
	MySQLObjectItemMaterial* mMySQLObjectItemMaterial;
	MySQLObjectItemSkillBook* mMySQLObjectItemSkillBook;
	MySQLObjectItemCard* mMySQLObjectItemCard;
	MySQLMission* mMySQLMission;
	MySQLMail* mMySQLMail;
	MySQLAuction* mMySQLAuction;
	MySQLGuild* mMySQLGuild;
	MySQLGuildRequest* mMySQLGuildRequest;
	MySQLAchivement* mMySQLAchivement;
	MySQLEquipGlobalCount* mMySQLEquipGlobalCount;
	MySQLCharacterSetting* mMySQLCharacterSetting;
	MySQLServerGlobal* mMySQLServerGlobal;
	MySQLOfferReward* mMySQLOfferReward;
	MySQLGuildTerritory* mMySQLGuildTerritory;
	MySQLAccountLoginIP* mMySQLAccountLoginIP;
	MySQLFriend* mMySQLFriend;
	MySQLDangerousFile* mMySQLDangerousFile;
	MySQLAuctionPrice* mMySQLAuctionPrice;
	MySQLQQMailProtect* mMySQLQQMailProtect;
	MySQLIPBlackList* mMySQLIPBlackList;
	MySQLAccountSell* mMySQLAccountSell;
	MySQLAccountSellWantBuy* mMySQLAccountSellWantBuy;
	MySQLErrorProfile* mMySQLErrorProfile;
	MySQLBlackList* mMySQLBlackList;
	MySQLLotteryTicket* mMySQLLotteryTicket;
	MySQLClientErrorMsg* mMySQLClientErrorMsg;
	MySQLServerCrash* mMySQLServerCrash;
	MySQLPlayerLogin* mMySQLPlayerLogin;
	MySQLDownloadBytes* mMySQLDownloadBytes;

	// SQLite Define
	SQLiteAchivement* mSQLiteAchivement;
	SQLiteAnimation* mSQLiteAnimation;
	SQLiteBuff* mSQLiteBuff;
	SQLiteBuffDetail* mSQLiteBuffDetail;
	SQLiteCardPoolOrange* mSQLiteCardPoolOrange;
	SQLiteCondition* mSQLiteCondition;
	SQLiteConditionDetail* mSQLiteConditionDetail;
	SQLiteEffect* mSQLiteEffect;
	SQLiteEnvironment* mSQLiteEnvironment;
	SQLiteEnvironmentSkill* mSQLiteEnvironmentSkill;
	SQLiteEquipConsecration* mSQLiteEquipConsecration;
	SQLiteEquipDecompose* mSQLiteEquipDecompose;
	SQLiteEquipDecomposeFashion* mSQLiteEquipDecomposeFashion;
	SQLiteEquipDecomposeSpecific* mSQLiteEquipDecomposeSpecific;
	SQLiteEquipStrength* mSQLiteEquipStrength;
	SQLiteEquipSuit* mSQLiteEquipSuit;
	SQLiteGlobal* mSQLiteGlobal;
	SQLiteGoods* mSQLiteGoods;
	SQLiteGuild* mSQLiteGuild;
	SQLiteGuildSalary* mSQLiteGuildSalary;
	SQLiteGuildTerritory* mSQLiteGuildTerritory;
	SQLiteImagePositionAnimation* mSQLiteImagePositionAnimation;
	SQLiteItem* mSQLiteItem;
	SQLiteItemBox* mSQLiteItemBox;
	SQLiteItemCard* mSQLiteItemCard;
	SQLiteItemConsumable* mSQLiteItemConsumable;
	SQLiteItemEquip* mSQLiteItemEquip;
	SQLiteItemMaterial* mSQLiteItemMaterial;
	SQLiteItemSkillBook* mSQLiteItemSkillBook;
	SQLiteMakeItem* mSQLiteMakeItem;
	SQLiteMineRegion* mSQLiteMineRegion;
	SQLiteMission* mSQLiteMission;
	SQLiteModelEquip* mSQLiteModelEquip;
	SQLiteMonster* mSQLiteMonster;
	SQLiteMonsterRegion* mSQLiteMonsterRegion;
	SQLiteMonsterSkill* mSQLiteMonsterSkill;
	SQLiteMonsterTemplate* mSQLiteMonsterTemplate;
	SQLiteMonsterWar* mSQLiteMonsterWar;
	SQLiteNPC* mSQLiteNPC;
	SQLiteNPCConversation* mSQLiteNPCConversation;
	SQLiteNPCTransfer* mSQLiteNPCTransfer;
	SQLitePKArena* mSQLitePKArena;
	SQLitePlayerLevel* mSQLitePlayerLevel;
	SQLitePlayerSkill* mSQLitePlayerSkill;
	SQLitePlayerSkillDetail* mSQLitePlayerSkillDetail;
	SQLiteReward* mSQLiteReward;
	SQLiteSceneCopy* mSQLiteSceneCopy;
	SQLiteSceneMap* mSQLiteSceneMap;
	SQLiteSceneMapFile* mSQLiteSceneMapFile;
	SQLiteSceneMapPeaceArea* mSQLiteSceneMapPeaceArea;
	SQLiteSceneMapSubRegion* mSQLiteSceneMapSubRegion;
	SQLiteSceneMapTransfer* mSQLiteSceneMapTransfer;
	SQLiteSkillBullet* mSQLiteSkillBullet;
	SQLiteTalkBubble* mSQLiteTalkBubble;
	SQLiteTalkBubbleGroup* mSQLiteTalkBubbleGroup;
	SQLiteTalkDialog* mSQLiteTalkDialog;
	SQLiteTriggerEvent* mSQLiteTriggerEvent;
	SQLiteTriggerModifier* mSQLiteTriggerModifier;
	SQLiteTriggerPoint* mSQLiteTriggerPoint;
	SQLiteWuJinJianTa* mSQLiteWuJinJianTa;

	void constructGameDone()
	{
		// FrameSystem Get
		mServerFramework->getSystem(STR(AccountManager), mAccountManager);
		mServerFramework->getSystem(STR(AchivementManager), mAchivementManager);
		mServerFramework->getSystem(STR(ActivityTerritorySystem), mActivityTerritorySystem);
		mServerFramework->getSystem(STR(MonsterWarSystem), mMonsterWarSystem);
		mServerFramework->getSystem(STR(ShabakeBattleSystem), mShabakeBattleSystem);
		mServerFramework->getSystem(STR(WorldBossSystem), mWorldBossSystem);
		mServerFramework->getSystem(STR(AuctionSystem), mAuctionSystem);
		mServerFramework->getSystem(STR(DTBuilderManager), mDTBuilderManager);
		mServerFramework->getSystem(STR(StateManager), mStateManager);
		mServerFramework->getSystem(STR(ChatSystem), mChatSystem);
		mServerFramework->getSystem(STR(ConditionManager), mConditionManager);
		mServerFramework->getSystem(STR(GameConfigSystem), mGameConfigSystem);
		mServerFramework->getSystem(STR(DebugSystem), mDebugSystem);
		mServerFramework->getSystem(STR(EnvironmentSystem), mEnvironmentSystem);
		mServerFramework->getSystem(STR(ExchangeManager), mExchangeManager);
		mServerFramework->getSystem(STR(GameVerifySystem), mGameVerifySystem);
		mServerFramework->getSystem(STR(GuildManager), mGuildManager);
		mServerFramework->getSystem(STR(LoginGateSystem), mLoginGateSystem);
		mServerFramework->getSystem(STR(LotteryTicketSystem), mLotteryTicketSystem);
		mServerFramework->getSystem(STR(MailManager), mMailManager);
		mServerFramework->getSystem(STR(MissionManager), mMissionManager);
		mServerFramework->getSystem(STR(MonsterManager), mMonsterManager);
#ifdef _MYSQL
		mServerFramework->getSystem(STR(MySQLCheckSystem), mMySQLCheckSystem);
#endif
		mServerFramework->getSystem(STR(NPCManager), mNPCManager);
		mServerFramework->getSystem(STR(ObjectItemManager), mObjectItemManager);
		mServerFramework->getSystem(STR(OfferRewardManager), mOfferRewardManager);
		mServerFramework->getSystem(STR(PKArenaSystem), mPKArenaSystem);
		mServerFramework->getSystem(STR(PKModeManager), mPKModeManager);
		mServerFramework->getSystem(STR(QQMailSystem), mQQMailSystem);
		mServerFramework->getSystem(STR(RankSystem), mRankSystem);
		mServerFramework->getSystem(STR(RedEnvelopeSystem), mRedEnvelopeSystem);
		mServerFramework->getSystem(STR(SceneCopyManager), mSceneCopyManager);
		mServerFramework->getSystem(STR(SceneMapManager), mSceneMapManager);
		mServerFramework->getSystem(STR(SceneTriggerManager), mSceneTriggerManager);
		mServerFramework->getSystem(STR(SeasonSystem), mSeasonSystem);
		mServerFramework->getSystem(STR(ServerGlobalSystem), mServerGlobalSystem);
		mServerFramework->getSystem(STR(ShoppingMallSystem), mShoppingMallSystem);
		mServerFramework->getSystem(STR(GameNetServerMiscSystem), mGameNetServerMiscSystem);
		mServerFramework->getSystem(STR(TeamManager), mTeamManager);
		mServerFramework->getSystem(STR(TreasureHouseSystem), mTreasureHouseSystem);
		mServerFramework->getSystem(STR(AccountPool), mAccountPool);
		mServerFramework->getSystem(STR(AccountSellInfoPool), mAccountSellInfoPool);
		mServerFramework->getSystem(STR(AchivementPool), mAchivementPool);
		mServerFramework->getSystem(STR(ActivityGuildDataPool), mActivityGuildDataPool);
		mServerFramework->getSystem(STR(AuctionItemPool), mAuctionItemPool);
		mServerFramework->getSystem(STR(AuctionPriceInfoPool), mAuctionPriceInfoPool);
		mServerFramework->getSystem(STR(AuctionSearchParamPool), mAuctionSearchParamPool);
		mServerFramework->getSystem(STR(CharacterBehaviourPool), mCharacterBehaviourPool);
		mServerFramework->getSystem(STR(CharacterSkillPool), mCharacterSkillPool);
		mServerFramework->getSystem(STR(ConditionPool), mConditionPool);
		mServerFramework->getSystem(STR(DamageInfoPool), mDamageInfoPool);
		mServerFramework->getSystem(STR(DamageTokenBulletPool), mDamageTokenBulletPool);
		mServerFramework->getSystem(STR(DamageTokenSkillPool), mDamageTokenSkillPool);
		mServerFramework->getSystem(STR(EquipCollectionPool), mEquipCollectionPool);
		mServerFramework->getSystem(STR(ExchangeInfoPool), mExchangeInfoPool);
		mServerFramework->getSystem(STR(ExchangePlayerPool), mExchangePlayerPool);
		mServerFramework->getSystem(STR(FunctionParamPool), mFunctionParamPool);
		mServerFramework->getSystem(STR(GuildPool), mGuildPool);
		mServerFramework->getSystem(STR(GuildRequestInfoPool), mGuildRequestInfoPool);
		mServerFramework->getSystem(STR(GuildShopGoodsPool), mGuildShopGoodsPool);
		mServerFramework->getSystem(STR(GuildTerritoryDataPool), mGuildTerritoryDataPool);
		mServerFramework->getSystem(STR(LotteryTicketPlayerPool), mLotteryTicketPlayerPool);
		mServerFramework->getSystem(STR(MailPool), mMailPool);
		mServerFramework->getSystem(STR(MissionPool), mMissionPool);
		mServerFramework->getSystem(STR(MonsterFireSkillInfoPool), mMonsterFireSkillInfoPool);
		mServerFramework->getSystem(STR(MonsterGeneratePool), mMonsterGeneratePool);
		mServerFramework->getSystem(STR(MonsterMoveInfoPool), mMonsterMoveInfoPool);
		mServerFramework->getSystem(STR(MonsterWarPool), mMonsterWarPool);
		mServerFramework->getSystem(STR(NPCGoodsItemPool), mNPCGoodsItemPool);
		mServerFramework->getSystem(STR(ObjectItemPool), mObjectItemPool);
		mServerFramework->getSystem(STR(ObjectItemSpecificPool), mObjectItemSpecificPool);
		mServerFramework->getSystem(STR(OfferRewardPool), mOfferRewardPool);
		mServerFramework->getSystem(STR(PKArenaSingleInstancePool), mPKArenaSingleInstancePool);
		mServerFramework->getSystem(STR(PKSingleMatchInfoPool), mPKSingleMatchInfoPool);
		mServerFramework->getSystem(STR(PKSinglePlayerInfoPool), mPKSinglePlayerInfoPool);
		mServerFramework->getSystem(STR(PlayerServerDataPool), mPlayerServerDataPool);
		mServerFramework->getSystem(STR(PlayerVerifyDataPool), mPlayerVerifyDataPool);
		mServerFramework->getSystem(STR(QQVerifyInfoPool), mQQVerifyInfoPool);
		mServerFramework->getSystem(STR(RankInfoPool), mRankInfoPool);
		mServerFramework->getSystem(STR(RedEnvelopePool), mRedEnvelopePool);
		mServerFramework->getSystem(STR(SceneCopyPool), mSceneCopyPool);
		mServerFramework->getSystem(STR(SceneMapPool), mSceneMapPool);
		mServerFramework->getSystem(STR(SceneSkillInfoPool), mSceneSkillInfoPool);
		mServerFramework->getSystem(STR(SceneTriggerPool), mSceneTriggerPool);
		mServerFramework->getSystem(STR(ShabakeBattleGuildInfoPool), mShabakeBattleGuildInfoPool);
		mServerFramework->getSystem(STR(ShabakeBattleMemberDataPool), mShabakeBattleMemberDataPool);
		mServerFramework->getSystem(STR(SkillBulletParamPool), mSkillBulletParamPool);
		mServerFramework->getSystem(STR(SkillBulletPool), mSkillBulletPool);
		mServerFramework->getSystem(STR(TeamInfoPool), mTeamInfoPool);
		mServerFramework->getSystem(STR(TerritoryMapDataPool), mTerritoryMapDataPool);
		mServerFramework->getSystem(STR(TriggerModifierPool), mTriggerModifierPool);
		mServerFramework->getSystem(STR(WorldBossPlayerInfoPool), mWorldBossPlayerInfoPool);
		mServerFramework->getSystem(STR(AchivementFactoryManager), mAchivementFactoryManager);
		mServerFramework->getSystem(STR(CharacterBehaviourFactoryManager), mCharacterBehaviourFactoryManager);
		mServerFramework->getSystem(STR(CharacterSkillFactoryManager), mCharacterSkillFactoryManager);
		mServerFramework->getSystem(STR(ConditionFactoryManager), mConditionFactoryManager);
		mServerFramework->getSystem(STR(MonsterGenerateFactoryManager), mMonsterGenerateFactoryManager);
		mServerFramework->getSystem(STR(ObjectItemFactoryManager), mObjectItemFactoryManager);
		mServerFramework->getSystem(STR(ObjectItemSpecificFactoryManager), mObjectItemSpecificFactoryManager);
		mServerFramework->getSystem(STR(SceneTriggerFactoryManager), mSceneTriggerFactoryManager);
		mServerFramework->getSystem(STR(TriggerModifierFactoryManager), mTriggerModifierFactoryManager);
	}

	void clearGameSystem()
	{
		// FrameSystem Clear
		mAccountManager = nullptr;
		mAchivementManager = nullptr;
		mActivityTerritorySystem = nullptr;
		mMonsterWarSystem = nullptr;
		mShabakeBattleSystem = nullptr;
		mWorldBossSystem = nullptr;
		mAuctionSystem = nullptr;
		mDTBuilderManager = nullptr;
		mStateManager = nullptr;
		mChatSystem = nullptr;
		mConditionManager = nullptr;
		mGameConfigSystem = nullptr;
		mDebugSystem = nullptr;
		mEnvironmentSystem = nullptr;
		mExchangeManager = nullptr;
		mGameVerifySystem = nullptr;
		mGuildManager = nullptr;
		mLoginGateSystem = nullptr;
		mLotteryTicketSystem = nullptr;
		mMailManager = nullptr;
		mMissionManager = nullptr;
		mMonsterManager = nullptr;
#ifdef _MYSQL
		mMySQLCheckSystem = nullptr;
#endif
		mNPCManager = nullptr;
		mObjectItemManager = nullptr;
		mOfferRewardManager = nullptr;
		mPKArenaSystem = nullptr;
		mPKModeManager = nullptr;
		mQQMailSystem = nullptr;
		mRankSystem = nullptr;
		mRedEnvelopeSystem = nullptr;
		mSceneCopyManager = nullptr;
		mSceneMapManager = nullptr;
		mSceneTriggerManager = nullptr;
		mSeasonSystem = nullptr;
		mServerGlobalSystem = nullptr;
		mShoppingMallSystem = nullptr;
		mGameNetServerMiscSystem = nullptr;
		mTeamManager = nullptr;
		mTreasureHouseSystem = nullptr;
		mAccountPool = nullptr;
		mAccountSellInfoPool = nullptr;
		mAchivementPool = nullptr;
		mActivityGuildDataPool = nullptr;
		mAuctionItemPool = nullptr;
		mAuctionPriceInfoPool = nullptr;
		mAuctionSearchParamPool = nullptr;
		mCharacterBehaviourPool = nullptr;
		mCharacterSkillPool = nullptr;
		mConditionPool = nullptr;
		mDamageInfoPool = nullptr;
		mDamageTokenBulletPool = nullptr;
		mDamageTokenSkillPool = nullptr;
		mEquipCollectionPool = nullptr;
		mExchangeInfoPool = nullptr;
		mExchangePlayerPool = nullptr;
		mFunctionParamPool = nullptr;
		mGuildPool = nullptr;
		mGuildRequestInfoPool = nullptr;
		mGuildShopGoodsPool = nullptr;
		mGuildTerritoryDataPool = nullptr;
		mLotteryTicketPlayerPool = nullptr;
		mMailPool = nullptr;
		mMissionPool = nullptr;
		mMonsterFireSkillInfoPool = nullptr;
		mMonsterGeneratePool = nullptr;
		mMonsterMoveInfoPool = nullptr;
		mMonsterWarPool = nullptr;
		mNPCGoodsItemPool = nullptr;
		mObjectItemPool = nullptr;
		mObjectItemSpecificPool = nullptr;
		mOfferRewardPool = nullptr;
		mPKArenaSingleInstancePool = nullptr;
		mPKSingleMatchInfoPool = nullptr;
		mPKSinglePlayerInfoPool = nullptr;
		mPlayerServerDataPool = nullptr;
		mPlayerVerifyDataPool = nullptr;
		mQQVerifyInfoPool = nullptr;
		mRankInfoPool = nullptr;
		mRedEnvelopePool = nullptr;
		mSceneCopyPool = nullptr;
		mSceneMapPool = nullptr;
		mSceneSkillInfoPool = nullptr;
		mSceneTriggerPool = nullptr;
		mShabakeBattleGuildInfoPool = nullptr;
		mShabakeBattleMemberDataPool = nullptr;
		mSkillBulletParamPool = nullptr;
		mSkillBulletPool = nullptr;
		mTeamInfoPool = nullptr;
		mTerritoryMapDataPool = nullptr;
		mTriggerModifierPool = nullptr;
		mWorldBossPlayerInfoPool = nullptr;
		mAchivementFactoryManager = nullptr;
		mCharacterBehaviourFactoryManager = nullptr;
		mCharacterSkillFactoryManager = nullptr;
		mConditionFactoryManager = nullptr;
		mMonsterGenerateFactoryManager = nullptr;
		mObjectItemFactoryManager = nullptr;
		mObjectItemSpecificFactoryManager = nullptr;
		mSceneTriggerFactoryManager = nullptr;
		mTriggerModifierFactoryManager = nullptr;

		// MySQL Clear
		mMySQLAccount = nullptr;
		mMySQLCharacterBase = nullptr;
		mMySQLCharacterEquip = nullptr;
		mMySQLCharacterBaseProperty = nullptr;
		mMySQLCharacterAsset = nullptr;
		mMySQLCharacterAddup = nullptr;
		mMySQLEquipCollection = nullptr;
		mMySQLObjectItemBox = nullptr;
		mMySQLObjectItemConsumable = nullptr;
		mMySQLObjectItemEquip = nullptr;
		mMySQLObjectItemID = nullptr;
		mMySQLObjectItemMaterial = nullptr;
		mMySQLObjectItemSkillBook = nullptr;
		mMySQLObjectItemCard = nullptr;
		mMySQLMission = nullptr;
		mMySQLMail = nullptr;
		mMySQLAuction = nullptr;
		mMySQLGuild = nullptr;
		mMySQLGuildRequest = nullptr;
		mMySQLAchivement = nullptr;
		mMySQLEquipGlobalCount = nullptr;
		mMySQLCharacterSetting = nullptr;
		mMySQLServerGlobal = nullptr;
		mMySQLOfferReward = nullptr;
		mMySQLGuildTerritory = nullptr;
		mMySQLAccountLoginIP = nullptr;
		mMySQLFriend = nullptr;
		mMySQLDangerousFile = nullptr;
		mMySQLAuctionPrice = nullptr;
		mMySQLQQMailProtect = nullptr;
		mMySQLIPBlackList = nullptr;
		mMySQLAccountSell = nullptr;
		mMySQLAccountSellWantBuy = nullptr;
		mMySQLErrorProfile = nullptr;
		mMySQLBlackList = nullptr;
		mMySQLLotteryTicket = nullptr;
		mMySQLClientErrorMsg = nullptr;
		mMySQLServerCrash = nullptr;
		mMySQLPlayerLogin = nullptr;
		mMySQLDownloadBytes = nullptr;

		// SQLite Clear
		mSQLiteAchivement = nullptr;
		mSQLiteAnimation = nullptr;
		mSQLiteBuff = nullptr;
		mSQLiteBuffDetail = nullptr;
		mSQLiteCardPoolOrange = nullptr;
		mSQLiteCondition = nullptr;
		mSQLiteConditionDetail = nullptr;
		mSQLiteEffect = nullptr;
		mSQLiteEnvironment = nullptr;
		mSQLiteEnvironmentSkill = nullptr;
		mSQLiteEquipConsecration = nullptr;
		mSQLiteEquipDecompose = nullptr;
		mSQLiteEquipDecomposeFashion = nullptr;
		mSQLiteEquipDecomposeSpecific = nullptr;
		mSQLiteEquipStrength = nullptr;
		mSQLiteEquipSuit = nullptr;
		mSQLiteGlobal = nullptr;
		mSQLiteGoods = nullptr;
		mSQLiteGuild = nullptr;
		mSQLiteGuildSalary = nullptr;
		mSQLiteGuildTerritory = nullptr;
		mSQLiteImagePositionAnimation = nullptr;
		mSQLiteItem = nullptr;
		mSQLiteItemBox = nullptr;
		mSQLiteItemCard = nullptr;
		mSQLiteItemConsumable = nullptr;
		mSQLiteItemEquip = nullptr;
		mSQLiteItemMaterial = nullptr;
		mSQLiteItemSkillBook = nullptr;
		mSQLiteMakeItem = nullptr;
		mSQLiteMineRegion = nullptr;
		mSQLiteMission = nullptr;
		mSQLiteModelEquip = nullptr;
		mSQLiteMonster = nullptr;
		mSQLiteMonsterRegion = nullptr;
		mSQLiteMonsterSkill = nullptr;
		mSQLiteMonsterTemplate = nullptr;
		mSQLiteMonsterWar = nullptr;
		mSQLiteNPC = nullptr;
		mSQLiteNPCConversation = nullptr;
		mSQLiteNPCTransfer = nullptr;
		mSQLitePKArena = nullptr;
		mSQLitePlayerLevel = nullptr;
		mSQLitePlayerSkill = nullptr;
		mSQLitePlayerSkillDetail = nullptr;
		mSQLiteReward = nullptr;
		mSQLiteSceneCopy = nullptr;
		mSQLiteSceneMap = nullptr;
		mSQLiteSceneMapFile = nullptr;
		mSQLiteSceneMapPeaceArea = nullptr;
		mSQLiteSceneMapSubRegion = nullptr;
		mSQLiteSceneMapTransfer = nullptr;
		mSQLiteSkillBullet = nullptr;
		mSQLiteTalkBubble = nullptr;
		mSQLiteTalkBubbleGroup = nullptr;
		mSQLiteTalkDialog = nullptr;
		mSQLiteTriggerEvent = nullptr;
		mSQLiteTriggerModifier = nullptr;
		mSQLiteTriggerPoint = nullptr;
		mSQLiteWuJinJianTa = nullptr;
	}
}