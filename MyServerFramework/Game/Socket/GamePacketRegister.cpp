#include "GameHeader.h"

string GamePacketRegister::PACKET_VERSION = "049E130A6482479A579006E6F37F07B1";
void GamePacketRegister::registeAll()
{
	mPacketTCPFactoryManager->addFactory<CSCheckPacketVersion>(PACKET_TYPE::CSCheckPacketVersion);
	mPacketTCPFactoryManager->addFactory<CSServerCheckPing>(PACKET_TYPE::CSServerCheckPing);
	mPacketTCPFactoryManager->addFactory<CSAttackCharacter>(PACKET_TYPE::CSAttackCharacter);
	mPacketTCPFactoryManager->addFactory<CSLoginCancel>(PACKET_TYPE::CSLoginCancel);
	mPacketTCPFactoryManager->addFactory<CSChangeDirection>(PACKET_TYPE::CSChangeDirection);
	mPacketTCPFactoryManager->addFactory<CSChangeMoveState>(PACKET_TYPE::CSChangeMoveState);
	mPacketTCPFactoryManager->addFactory<CSChangePosition>(PACKET_TYPE::CSChangePosition);
	mPacketTCPFactoryManager->addFactory<CSChat>(PACKET_TYPE::CSChat);
	mPacketTCPFactoryManager->addFactory<CSChatPrivate>(PACKET_TYPE::CSChatPrivate);
	mPacketTCPFactoryManager->addFactory<CSChatPrivateStart>(PACKET_TYPE::CSChatPrivateStart);
	mPacketTCPFactoryManager->addFactory<CSChatPrivateRemove>(PACKET_TYPE::CSChatPrivateRemove);
	mPacketTCPFactoryManager->addFactory<CSPackItemDrop>(PACKET_TYPE::CSPackItemDrop);
	mPacketTCPFactoryManager->addFactory<CSMonsterAttackPlayer>(PACKET_TYPE::CSMonsterAttackPlayer);
	mPacketTCPFactoryManager->addFactory<CSPackMoveItem>(PACKET_TYPE::CSPackMoveItem);
	mPacketTCPFactoryManager->addFactory<CSSkillAssignKey>(PACKET_TYPE::CSSkillAssignKey);
	mPacketTCPFactoryManager->addFactory<CSBuyNPCGoods>(PACKET_TYPE::CSBuyNPCGoods);
	mPacketTCPFactoryManager->addFactory<CSBuyGuildGoods>(PACKET_TYPE::CSBuyGuildGoods);
	mPacketTCPFactoryManager->addFactory<CSCheckAccount>(PACKET_TYPE::CSCheckAccount);
	mPacketTCPFactoryManager->addFactory<CSCheckName>(PACKET_TYPE::CSCheckName);
	mPacketTCPFactoryManager->addFactory<CSCharacterCreate>(PACKET_TYPE::CSCharacterCreate);
	mPacketTCPFactoryManager->addFactory<CSCharacterDelete>(PACKET_TYPE::CSCharacterDelete);
	mPacketTCPFactoryManager->addFactory<CSCharacterLogin>(PACKET_TYPE::CSCharacterLogin);
	mPacketTCPFactoryManager->addFactory<CSSkillFire>(PACKET_TYPE::CSSkillFire);
	mPacketTCPFactoryManager->addFactory<CSAccountLogin>(PACKET_TYPE::CSAccountLogin);
	mPacketTCPFactoryManager->addFactory<CSLogoutCharacter>(PACKET_TYPE::CSLogoutCharacter);
	mPacketTCPFactoryManager->addFactory<CSMonsterList>(PACKET_TYPE::CSMonsterList);
	mPacketTCPFactoryManager->addFactory<CSMyselfList>(PACKET_TYPE::CSMyselfList);
	mPacketTCPFactoryManager->addFactory<CSNPCList>(PACKET_TYPE::CSNPCList);
	mPacketTCPFactoryManager->addFactory<CSNPCShopGoods>(PACKET_TYPE::CSNPCShopGoods);
	mPacketTCPFactoryManager->addFactory<CSOtherPlayerData>(PACKET_TYPE::CSOtherPlayerData);
	mPacketTCPFactoryManager->addFactory<CSSceneItemPick>(PACKET_TYPE::CSSceneItemPick);
	mPacketTCPFactoryManager->addFactory<CSAccountRegiste>(PACKET_TYPE::CSAccountRegiste);
	mPacketTCPFactoryManager->addFactory<CSEquipRepair>(PACKET_TYPE::CSEquipRepair);
	mPacketTCPFactoryManager->addFactory<CSSceneItemList>(PACKET_TYPE::CSSceneItemList);
	mPacketTCPFactoryManager->addFactory<CSPackItemSell>(PACKET_TYPE::CSPackItemSell);
	mPacketTCPFactoryManager->addFactory<CSSkillLevelUp>(PACKET_TYPE::CSSkillLevelUp);
	mPacketTCPFactoryManager->addFactory<CSEquipTakeOff>(PACKET_TYPE::CSEquipTakeOff);
	mPacketTCPFactoryManager->addFactory<CSPackItemUse>(PACKET_TYPE::CSPackItemUse);
	mPacketTCPFactoryManager->addFactory<CSEquipWear>(PACKET_TYPE::CSEquipWear);
	mPacketTCPFactoryManager->addFactory<CSWarehouseItemList>(PACKET_TYPE::CSWarehouseItemList);
	mPacketTCPFactoryManager->addFactory<CSWarehouseStoreItem>(PACKET_TYPE::CSWarehouseStoreItem);
	mPacketTCPFactoryManager->addFactory<CSWarehouseMoveItem>(PACKET_TYPE::CSWarehouseMoveItem);
	mPacketTCPFactoryManager->addFactory<CSWarehouseTakeItem>(PACKET_TYPE::CSWarehouseTakeItem);
	mPacketTCPFactoryManager->addFactory<CSMakeItem>(PACKET_TYPE::CSMakeItem);
	mPacketTCPFactoryManager->addFactory<CSMissionList>(PACKET_TYPE::CSMissionList);
	mPacketTCPFactoryManager->addFactory<CSMissionSubmit>(PACKET_TYPE::CSMissionSubmit);
	mPacketTCPFactoryManager->addFactory<CSMissionGiveup>(PACKET_TYPE::CSMissionGiveup);
	mPacketTCPFactoryManager->addFactory<CSMissionAccept>(PACKET_TYPE::CSMissionAccept);
	mPacketTCPFactoryManager->addFactory<CSTalkFinish>(PACKET_TYPE::CSTalkFinish);
	mPacketTCPFactoryManager->addFactory<CSMailList>(PACKET_TYPE::CSMailList);
	mPacketTCPFactoryManager->addFactory<CSMailDelete>(PACKET_TYPE::CSMailDelete);
	mPacketTCPFactoryManager->addFactory<CSMailDeleteEmpty>(PACKET_TYPE::CSMailDeleteEmpty);
	mPacketTCPFactoryManager->addFactory<CSMailTakeItem>(PACKET_TYPE::CSMailTakeItem);
	mPacketTCPFactoryManager->addFactory<CSMailSend>(PACKET_TYPE::CSMailSend);
	mPacketTCPFactoryManager->addFactory<CSMailCheckReceiver>(PACKET_TYPE::CSMailCheckReceiver);
	mPacketTCPFactoryManager->addFactory<CSMailRead>(PACKET_TYPE::CSMailRead);
	mPacketTCPFactoryManager->addFactory<CSAuctionPutOn>(PACKET_TYPE::CSAuctionPutOn);
	mPacketTCPFactoryManager->addFactory<CSAuctionPutOnList>(PACKET_TYPE::CSAuctionPutOnList);
	mPacketTCPFactoryManager->addFactory<CSAuctionPullOff>(PACKET_TYPE::CSAuctionPullOff);
	mPacketTCPFactoryManager->addFactory<CSAuctionSearch>(PACKET_TYPE::CSAuctionSearch);
	mPacketTCPFactoryManager->addFactory<CSAuctionSearchPage>(PACKET_TYPE::CSAuctionSearchPage);
	mPacketTCPFactoryManager->addFactory<CSAuctionBuy>(PACKET_TYPE::CSAuctionBuy);
	mPacketTCPFactoryManager->addFactory<CSFriendList>(PACKET_TYPE::CSFriendList);
	mPacketTCPFactoryManager->addFactory<CSFriendAddRequest>(PACKET_TYPE::CSFriendAddRequest);
	mPacketTCPFactoryManager->addFactory<CSFriendDelete>(PACKET_TYPE::CSFriendDelete);
	mPacketTCPFactoryManager->addFactory<CSFriendRequestConfirm>(PACKET_TYPE::CSFriendRequestConfirm);
	mPacketTCPFactoryManager->addFactory<CSLoginFinish>(PACKET_TYPE::CSLoginFinish);
	mPacketTCPFactoryManager->addFactory<CSTeamInvite>(PACKET_TYPE::CSTeamInvite);
	mPacketTCPFactoryManager->addFactory<CSTeamInviteReply>(PACKET_TYPE::CSTeamInviteReply);
	mPacketTCPFactoryManager->addFactory<CSTeamKickOutMember>(PACKET_TYPE::CSTeamKickOutMember);
	mPacketTCPFactoryManager->addFactory<CSTeamLeave>(PACKET_TYPE::CSTeamLeave);
	mPacketTCPFactoryManager->addFactory<CSTeamRequestJoin>(PACKET_TYPE::CSTeamRequestJoin);
	mPacketTCPFactoryManager->addFactory<CSTeamResponseJoin>(PACKET_TYPE::CSTeamResponseJoin);
	mPacketTCPFactoryManager->addFactory<CSTeamAssignLeader>(PACKET_TYPE::CSTeamAssignLeader);
	mPacketTCPFactoryManager->addFactory<CSGuildAnnouncement>(PACKET_TYPE::CSGuildAnnouncement);
	mPacketTCPFactoryManager->addFactory<CSGuildCreate>(PACKET_TYPE::CSGuildCreate);
	mPacketTCPFactoryManager->addFactory<CSGuildInfo>(PACKET_TYPE::CSGuildInfo);
	mPacketTCPFactoryManager->addFactory<CSGuildRequestJoin>(PACKET_TYPE::CSGuildRequestJoin);
	mPacketTCPFactoryManager->addFactory<CSGuildLeave>(PACKET_TYPE::CSGuildLeave);
	mPacketTCPFactoryManager->addFactory<CSGuildList>(PACKET_TYPE::CSGuildList);
	mPacketTCPFactoryManager->addFactory<CSGuildInvite>(PACKET_TYPE::CSGuildInvite);
	mPacketTCPFactoryManager->addFactory<CSGuildAssignTitle>(PACKET_TYPE::CSGuildAssignTitle);
	mPacketTCPFactoryManager->addFactory<CSGuildKickOut>(PACKET_TYPE::CSGuildKickOut);
	mPacketTCPFactoryManager->addFactory<CSGuildDistributeGold>(PACKET_TYPE::CSGuildDistributeGold);
	mPacketTCPFactoryManager->addFactory<CSGuildDistributeItem>(PACKET_TYPE::CSGuildDistributeItem);
	mPacketTCPFactoryManager->addFactory<CSGuildDismiss>(PACKET_TYPE::CSGuildDismiss);
	mPacketTCPFactoryManager->addFactory<CSGuildMemberList>(PACKET_TYPE::CSGuildMemberList);
	mPacketTCPFactoryManager->addFactory<CSGuildResponseInvite>(PACKET_TYPE::CSGuildResponseInvite);
	mPacketTCPFactoryManager->addFactory<CSGuildRequestList>(PACKET_TYPE::CSGuildRequestList);
	mPacketTCPFactoryManager->addFactory<CSGuildDealRequest>(PACKET_TYPE::CSGuildDealRequest);
	mPacketTCPFactoryManager->addFactory<CSGuildShopGoods>(PACKET_TYPE::CSGuildShopGoods);
	mPacketTCPFactoryManager->addFactory<CSExchangeRequest>(PACKET_TYPE::CSExchangeRequest);
	mPacketTCPFactoryManager->addFactory<CSExchangeResponse>(PACKET_TYPE::CSExchangeResponse);
	mPacketTCPFactoryManager->addFactory<CSExchangeItemList>(PACKET_TYPE::CSExchangeItemList);
	mPacketTCPFactoryManager->addFactory<CSExchangeGold>(PACKET_TYPE::CSExchangeGold);
	mPacketTCPFactoryManager->addFactory<CSExchangeLock>(PACKET_TYPE::CSExchangeLock);
	mPacketTCPFactoryManager->addFactory<CSExchangeConfirm>(PACKET_TYPE::CSExchangeConfirm);
	mPacketTCPFactoryManager->addFactory<CSExchangeCancel>(PACKET_TYPE::CSExchangeCancel);
	mPacketTCPFactoryManager->addFactory<CSAchivementList>(PACKET_TYPE::CSAchivementList);
	mPacketTCPFactoryManager->addFactory<CSAchivementReceive>(PACKET_TYPE::CSAchivementReceive);
	mPacketTCPFactoryManager->addFactory<CSPing>(PACKET_TYPE::CSPing);
	mPacketTCPFactoryManager->addFactory<CSSceneSkillInfo>(PACKET_TYPE::CSSceneSkillInfo);
	mPacketTCPFactoryManager->addFactory<CSRankList>(PACKET_TYPE::CSRankList);
	mPacketTCPFactoryManager->addFactory<CSPackItemDestroy>(PACKET_TYPE::CSPackItemDestroy);
	mPacketTCPFactoryManager->addFactory<CSEquipStrength>(PACKET_TYPE::CSEquipStrength);
	mPacketTCPFactoryManager->addFactory<CSMonsterDecisionTree>(PACKET_TYPE::CSMonsterDecisionTree);
	mPacketTCPFactoryManager->addFactory<CSPKMode>(PACKET_TYPE::CSPKMode);
	mPacketTCPFactoryManager->addFactory<CSSummonAttackCharacter>(PACKET_TYPE::CSSummonAttackCharacter);
	mPacketTCPFactoryManager->addFactory<CSMonsterAttackSummon>(PACKET_TYPE::CSMonsterAttackSummon);
	mPacketTCPFactoryManager->addFactory<CSMoveStart>(PACKET_TYPE::CSMoveStart);
	mPacketTCPFactoryManager->addFactory<CSMoveEnd>(PACKET_TYPE::CSMoveEnd);
	mPacketTCPFactoryManager->addFactory<CSDigMineStart>(PACKET_TYPE::CSDigMineStart);
	mPacketTCPFactoryManager->addFactory<CSDigMineEnd>(PACKET_TYPE::CSDigMineEnd);
	mPacketTCPFactoryManager->addFactory<CSAccountLogout>(PACKET_TYPE::CSAccountLogout);
	mPacketTCPFactoryManager->addFactory<CSSceneTrigger>(PACKET_TYPE::CSSceneTrigger);
	mPacketTCPFactoryManager->addFactory<CSDetectPlayerLocation>(PACKET_TYPE::CSDetectPlayerLocation);
	mPacketTCPFactoryManager->addFactory<CSTransferToPosition>(PACKET_TYPE::CSTransferToPosition);
	mPacketTCPFactoryManager->addFactory<CSStarEquipComposite>(PACKET_TYPE::CSStarEquipComposite);
	mPacketTCPFactoryManager->addFactory<CSExchangeGoldBar>(PACKET_TYPE::CSExchangeGoldBar);
	mPacketTCPFactoryManager->addFactory<CSExchangeGoldBrick>(PACKET_TYPE::CSExchangeGoldBrick);
	mPacketTCPFactoryManager->addFactory<CSExchangeGoldBox>(PACKET_TYPE::CSExchangeGoldBox);
	mPacketTCPFactoryManager->addFactory<CSAuctionSupposedPrice>(PACKET_TYPE::CSAuctionSupposedPrice);
	mPacketTCPFactoryManager->addFactory<CSAuctionSupposedPriceResponse>(PACKET_TYPE::CSAuctionSupposedPriceResponse);
	mPacketTCPFactoryManager->addFactory<CSGlobalEquipCount>(PACKET_TYPE::CSGlobalEquipCount);
	mPacketTCPFactoryManager->addFactory<CSGameSettingPlayer>(PACKET_TYPE::CSGameSettingPlayer);
	mPacketTCPFactoryManager->addFactory<CSGameSettingSystem>(PACKET_TYPE::CSGameSettingSystem);
	mPacketTCPFactoryManager->addFactory<CSClearEquipProficiency>(PACKET_TYPE::CSClearEquipProficiency);
	mPacketTCPFactoryManager->addFactory<CSSceneEnvironmentList>(PACKET_TYPE::CSSceneEnvironmentList);
	mPacketTCPFactoryManager->addFactory<CSEnvironmentAttackPlayer>(PACKET_TYPE::CSEnvironmentAttackPlayer);
	mPacketTCPFactoryManager->addFactory<CSEquipRepairWithItem>(PACKET_TYPE::CSEquipRepairWithItem);
	mPacketTCPFactoryManager->addFactory<CSShoppingMall>(PACKET_TYPE::CSShoppingMall);
	mPacketTCPFactoryManager->addFactory<CSBuyShoppingMallGoods>(PACKET_TYPE::CSBuyShoppingMallGoods);
	mPacketTCPFactoryManager->addFactory<CSResetPassword>(PACKET_TYPE::CSResetPassword);
	mPacketTCPFactoryManager->addFactory<CSCharacterAddupData>(PACKET_TYPE::CSCharacterAddupData);
	mPacketTCPFactoryManager->addFactory<CSSkillAddExp>(PACKET_TYPE::CSSkillAddExp);
	mPacketTCPFactoryManager->addFactory<CSEnterMapFinish>(PACKET_TYPE::CSEnterMapFinish);
	mPacketTCPFactoryManager->addFactory<CSOtherPlayerOutlook>(PACKET_TYPE::CSOtherPlayerOutlook);
	mPacketTCPFactoryManager->addFactory<CSExpandBackpack>(PACKET_TYPE::CSExpandBackpack);
	mPacketTCPFactoryManager->addFactory<CSOtherPlayerStateList>(PACKET_TYPE::CSOtherPlayerStateList);
	mPacketTCPFactoryManager->addFactory<CSDieProcessed>(PACKET_TYPE::CSDieProcessed);
	mPacketTCPFactoryManager->addFactory<CSStateList>(PACKET_TYPE::CSStateList);
	mPacketTCPFactoryManager->addFactory<CSResetPrecioursValue>(PACKET_TYPE::CSResetPrecioursValue);
	mPacketTCPFactoryManager->addFactory<CSDecomposeEquip>(PACKET_TYPE::CSDecomposeEquip);
	mPacketTCPFactoryManager->addFactory<CSEnterFairyLand>(PACKET_TYPE::CSEnterFairyLand);
	mPacketTCPFactoryManager->addFactory<CSIncreaseMineTime>(PACKET_TYPE::CSIncreaseMineTime);
	mPacketTCPFactoryManager->addFactory<CSMineTime>(PACKET_TYPE::CSMineTime);
	mPacketTCPFactoryManager->addFactory<CSExpandWarehouse>(PACKET_TYPE::CSExpandWarehouse);
	mPacketTCPFactoryManager->addFactory<CSBuyQuickSellCount>(PACKET_TYPE::CSBuyQuickSellCount);
	mPacketTCPFactoryManager->addFactory<CSQuickSell>(PACKET_TYPE::CSQuickSell);
	mPacketTCPFactoryManager->addFactory<CSQuickSellCount>(PACKET_TYPE::CSQuickSellCount);
	mPacketTCPFactoryManager->addFactory<CSEnterSceneCopy>(PACKET_TYPE::CSEnterSceneCopy);
	mPacketTCPFactoryManager->addFactory<CSExchangeHellItem>(PACKET_TYPE::CSExchangeHellItem);
	mPacketTCPFactoryManager->addFactory<CSExchangeStrengthItem>(PACKET_TYPE::CSExchangeStrengthItem);
	mPacketTCPFactoryManager->addFactory<CSExchangeSkillStone>(PACKET_TYPE::CSExchangeSkillStone);
	mPacketTCPFactoryManager->addFactory<CSCheckDeviceHardware>(PACKET_TYPE::CSCheckDeviceHardware);
	mPacketTCPFactoryManager->addFactory<CSSecondaryPasswordState>(PACKET_TYPE::CSSecondaryPasswordState);
	mPacketTCPFactoryManager->addFactory<CSSecondaryPasswordCreate>(PACKET_TYPE::CSSecondaryPasswordCreate);
	mPacketTCPFactoryManager->addFactory<CSSecondaryPasswordVerify>(PACKET_TYPE::CSSecondaryPasswordVerify);
	mPacketTCPFactoryManager->addFactory<CSSummonControl>(PACKET_TYPE::CSSummonControl);
	mPacketTCPFactoryManager->addFactory<CSEnterUnknownDarkPalace>(PACKET_TYPE::CSEnterUnknownDarkPalace);
	mPacketTCPFactoryManager->addFactory<CSOfferRewardList>(PACKET_TYPE::CSOfferRewardList);
	mPacketTCPFactoryManager->addFactory<CSOfferRewardMyAcceptedList>(PACKET_TYPE::CSOfferRewardMyAcceptedList);
	mPacketTCPFactoryManager->addFactory<CSOfferRewardMyPutOnList>(PACKET_TYPE::CSOfferRewardMyPutOnList);
	mPacketTCPFactoryManager->addFactory<CSOfferRewardPutOn>(PACKET_TYPE::CSOfferRewardPutOn);
	mPacketTCPFactoryManager->addFactory<CSPlayerName>(PACKET_TYPE::CSPlayerName);
	mPacketTCPFactoryManager->addFactory<CSOfferRewardAccept>(PACKET_TYPE::CSOfferRewardAccept);
	mPacketTCPFactoryManager->addFactory<CSOfferRewardSubmit>(PACKET_TYPE::CSOfferRewardSubmit);
	mPacketTCPFactoryManager->addFactory<CSOfferRewardGiveup>(PACKET_TYPE::CSOfferRewardGiveup);
	mPacketTCPFactoryManager->addFactory<CSExchangeSkillStoneToHellItem>(PACKET_TYPE::CSExchangeSkillStoneToHellItem);
	mPacketTCPFactoryManager->addFactory<CSExchangeAuctionRateDiscount>(PACKET_TYPE::CSExchangeAuctionRateDiscount);
	mPacketTCPFactoryManager->addFactory<CSAuctionRateDiscount>(PACKET_TYPE::CSAuctionRateDiscount);
	mPacketTCPFactoryManager->addFactory<CSLoginFirstEnterMap>(PACKET_TYPE::CSLoginFirstEnterMap);
	mPacketTCPFactoryManager->addFactory<CSEnterShengYu>(PACKET_TYPE::CSEnterShengYu);
	mPacketTCPFactoryManager->addFactory<CSBackToMengZhong>(PACKET_TYPE::CSBackToMengZhong);
	mPacketTCPFactoryManager->addFactory<CSEnterFairyLand4>(PACKET_TYPE::CSEnterFairyLand4);
	mPacketTCPFactoryManager->addFactory<CSNPCTransfer>(PACKET_TYPE::CSNPCTransfer);
	mPacketTCPFactoryManager->addFactory<CSEnterMapTransfer>(PACKET_TYPE::CSEnterMapTransfer);
	mPacketTCPFactoryManager->addFactory<CSQQBind>(PACKET_TYPE::CSQQBind);
	mPacketTCPFactoryManager->addFactory<CSQQGet>(PACKET_TYPE::CSQQGet);
	mPacketTCPFactoryManager->addFactory<CSGuildLevelUp>(PACKET_TYPE::CSGuildLevelUp);
	mPacketTCPFactoryManager->addFactory<CSMemoryModified>(PACKET_TYPE::CSMemoryModified);
	mPacketTCPFactoryManager->addFactory<CSTerritoryActivityInfo>(PACKET_TYPE::CSTerritoryActivityInfo);
	mPacketTCPFactoryManager->addFactory<CSTerritoryActivityScoreList>(PACKET_TYPE::CSTerritoryActivityScoreList);
	mPacketTCPFactoryManager->addFactory<CSTerritoryActivitySignUp>(PACKET_TYPE::CSTerritoryActivitySignUp);
	mPacketTCPFactoryManager->addFactory<CSTerritoryActivityMemberScoreList>(PACKET_TYPE::CSTerritoryActivityMemberScoreList);
	mPacketTCPFactoryManager->addFactory<CSTerritoryUpgradeGold>(PACKET_TYPE::CSTerritoryUpgradeGold);
	mPacketTCPFactoryManager->addFactory<CSTerritoryUpgradeExp>(PACKET_TYPE::CSTerritoryUpgradeExp);
	mPacketTCPFactoryManager->addFactory<CSTerritoryUpgradeDropProtect>(PACKET_TYPE::CSTerritoryUpgradeDropProtect);
	mPacketTCPFactoryManager->addFactory<CSCheckFolder>(PACKET_TYPE::CSCheckFolder);
	mPacketTCPFactoryManager->addFactory<CSChangeName>(PACKET_TYPE::CSChangeName);
	mPacketTCPFactoryManager->addFactory<CSEquipUseCard>(PACKET_TYPE::CSEquipUseCard);
	mPacketTCPFactoryManager->addFactory<CSGuildSalaryReceiveInfo>(PACKET_TYPE::CSGuildSalaryReceiveInfo);
	mPacketTCPFactoryManager->addFactory<CSGuildSalaryReceive>(PACKET_TYPE::CSGuildSalaryReceive);
	mPacketTCPFactoryManager->addFactory<CSCheckExe>(PACKET_TYPE::CSCheckExe);
	mPacketTCPFactoryManager->addFactory<CSEquipLock>(PACKET_TYPE::CSEquipLock);
	mPacketTCPFactoryManager->addFactory<CSEquipUnlock>(PACKET_TYPE::CSEquipUnlock);
	mPacketTCPFactoryManager->addFactory<CSQuickDecomposeEquip>(PACKET_TYPE::CSQuickDecomposeEquip);
	mPacketTCPFactoryManager->addFactory<CSBuyQuickDecomposeEquip>(PACKET_TYPE::CSBuyQuickDecomposeEquip);
	mPacketTCPFactoryManager->addFactory<CSQuickDecomposeCount>(PACKET_TYPE::CSQuickDecomposeCount);
	mPacketTCPFactoryManager->addFactory<CSExchangePureWhitePlume>(PACKET_TYPE::CSExchangePureWhitePlume);
	mPacketTCPFactoryManager->addFactory<CSTransferPreciousValue>(PACKET_TYPE::CSTransferPreciousValue);
	mPacketTCPFactoryManager->addFactory<CSExchangeGoldenBox>(PACKET_TYPE::CSExchangeGoldenBox);
	mPacketTCPFactoryManager->addFactory<CSBlessEquip>(PACKET_TYPE::CSBlessEquip);
	mPacketTCPFactoryManager->addFactory<CSQQBindVerify>(PACKET_TYPE::CSQQBindVerify);
	mPacketTCPFactoryManager->addFactory<CSUDPHeartBeat>(PACKET_TYPE::CSUDPHeartBeat);
	mPacketTCPFactoryManager->addFactory<CSShabakeBattleEnroll>(PACKET_TYPE::CSShabakeBattleEnroll);
	mPacketTCPFactoryManager->addFactory<CSAuctionAveragePrice>(PACKET_TYPE::CSAuctionAveragePrice);
	mPacketTCPFactoryManager->addFactory<CSTransferToShabake>(PACKET_TYPE::CSTransferToShabake);
	mPacketTCPFactoryManager->addFactory<CSBossDropProtectCount>(PACKET_TYPE::CSBossDropProtectCount);
	mPacketTCPFactoryManager->addFactory<CSBuyBossDropProtectCount>(PACKET_TYPE::CSBuyBossDropProtectCount);
	mPacketTCPFactoryManager->addFactory<CSQQMailProtect>(PACKET_TYPE::CSQQMailProtect);
	mPacketTCPFactoryManager->addFactory<CSReviveInSceneCopy>(PACKET_TYPE::CSReviveInSceneCopy);
	mPacketTCPFactoryManager->addFactory<CSExitSceneCopy>(PACKET_TYPE::CSExitSceneCopy);
	mPacketTCPFactoryManager->addFactory<CSFinishSceneCopy>(PACKET_TYPE::CSFinishSceneCopy);
	mPacketTCPFactoryManager->addFactory<CSPKMatch>(PACKET_TYPE::CSPKMatch);
	mPacketTCPFactoryManager->addFactory<CSPKCancelMatch>(PACKET_TYPE::CSPKCancelMatch);
	mPacketTCPFactoryManager->addFactory<CSPKSettlementConfirm>(PACKET_TYPE::CSPKSettlementConfirm);
	mPacketTCPFactoryManager->addFactory<CSRedEnvelopeList>(PACKET_TYPE::CSRedEnvelopeList);
	mPacketTCPFactoryManager->addFactory<CSRedEnvelopeGrab>(PACKET_TYPE::CSRedEnvelopeGrab);
	mPacketTCPFactoryManager->addFactory<CSRedEnvelopeDetail>(PACKET_TYPE::CSRedEnvelopeDetail);
	mPacketTCPFactoryManager->addFactory<CSRedEnvelopeDispatch>(PACKET_TYPE::CSRedEnvelopeDispatch);
	mPacketTCPFactoryManager->addFactory<CSFindPassword>(PACKET_TYPE::CSFindPassword);
	mPacketTCPFactoryManager->addFactory<CSMakeMedal>(PACKET_TYPE::CSMakeMedal);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseList>(PACKET_TYPE::CSTreasureHouseList);
	mPacketTCPFactoryManager->addFactory<CSTreasureHousePutOn>(PACKET_TYPE::CSTreasureHousePutOn);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseMyselfPutOn>(PACKET_TYPE::CSTreasureHouseMyselfPutOn);
	mPacketTCPFactoryManager->addFactory<CSTreasureHousePullOff>(PACKET_TYPE::CSTreasureHousePullOff);
	mPacketTCPFactoryManager->addFactory<CSOtherPlayerBackpack>(PACKET_TYPE::CSOtherPlayerBackpack);
	mPacketTCPFactoryManager->addFactory<CSOtherPlayerWarehouse>(PACKET_TYPE::CSOtherPlayerWarehouse);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseWantBuy>(PACKET_TYPE::CSTreasureHouseWantBuy);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseWantBuyList>(PACKET_TYPE::CSTreasureHouseWantBuyList);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseDeal>(PACKET_TYPE::CSTreasureHouseDeal);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseRefuse>(PACKET_TYPE::CSTreasureHouseRefuse);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseBuyAccountNeedInfo>(PACKET_TYPE::CSTreasureHouseBuyAccountNeedInfo);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseMyWantBuyList>(PACKET_TYPE::CSTreasureHouseMyWantBuyList);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseCancelWantBuy>(PACKET_TYPE::CSTreasureHouseCancelWantBuy);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseReviewList>(PACKET_TYPE::CSTreasureHouseReviewList);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseReviewSuccess>(PACKET_TYPE::CSTreasureHouseReviewSuccess);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseLockAccount>(PACKET_TYPE::CSTreasureHouseLockAccount);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseSellDetail>(PACKET_TYPE::CSTreasureHouseSellDetail);
	mPacketTCPFactoryManager->addFactory<CSTreasureHouseForcePullOff>(PACKET_TYPE::CSTreasureHouseForcePullOff);
	mPacketTCPFactoryManager->addFactory<CSValidatePosition>(PACKET_TYPE::CSValidatePosition);
	mPacketTCPFactoryManager->addFactory<CSCharacterCurDayData>(PACKET_TYPE::CSCharacterCurDayData);
	mPacketTCPFactoryManager->addFactory<CSNuomaUnlock>(PACKET_TYPE::CSNuomaUnlock);
	mPacketTCPFactoryManager->addFactory<CSNuomaEnter>(PACKET_TYPE::CSNuomaEnter);
	mPacketTCPFactoryManager->addFactory<CSEnterTianMa>(PACKET_TYPE::CSEnterTianMa);
	mPacketTCPFactoryManager->addFactory<CSUnlockTianMa>(PACKET_TYPE::CSUnlockTianMa);
	mPacketTCPFactoryManager->addFactory<CSMapLockState>(PACKET_TYPE::CSMapLockState);
	mPacketTCPFactoryManager->addFactory<CSBlackListAdd>(PACKET_TYPE::CSBlackListAdd);
	mPacketTCPFactoryManager->addFactory<CSBlackListRemove>(PACKET_TYPE::CSBlackListRemove);
	mPacketTCPFactoryManager->addFactory<CSBlackList>(PACKET_TYPE::CSBlackList);
	mPacketTCPFactoryManager->addFactory<CSLotteryTicketSelect>(PACKET_TYPE::CSLotteryTicketSelect);
	mPacketTCPFactoryManager->addFactory<CSLotteryTicketState>(PACKET_TYPE::CSLotteryTicketState);
	mPacketTCPFactoryManager->addFactory<CSEquipConsecration>(PACKET_TYPE::CSEquipConsecration);
	mPacketTCPFactoryManager->addFactory<CSEquipInjectPower>(PACKET_TYPE::CSEquipInjectPower);
	mPacketTCPFactoryManager->addFactory<CSYeManChongZhuangMove>(PACKET_TYPE::CSYeManChongZhuangMove);
	mPacketTCPFactoryManager->addFactory<CSSecondaryPasswordFetchVerify>(PACKET_TYPE::CSSecondaryPasswordFetchVerify);
	mPacketTCPFactoryManager->addFactory<CSSecondaryPasswordReset>(PACKET_TYPE::CSSecondaryPasswordReset);
	mPacketTCPFactoryManager->addFactory<CSExchangeLightCore>(PACKET_TYPE::CSExchangeLightCore);
	mPacketTCPFactoryManager->addFactory<CSEnterHeiAnDaDian>(PACKET_TYPE::CSEnterHeiAnDaDian);
	mPacketTCPFactoryManager->addFactory<CSClientErrorMsg>(PACKET_TYPE::CSClientErrorMsg);
	mPacketTCPFactoryManager->addFactory<CSBackpackSort>(PACKET_TYPE::CSBackpackSort);
	mPacketTCPFactoryManager->addFactory<CSTeamCallMember>(PACKET_TYPE::CSTeamCallMember);
	mPacketTCPFactoryManager->addFactory<CSTeamCallMemberConfirm>(PACKET_TYPE::CSTeamCallMemberConfirm);
	mPacketTCPFactoryManager->addFactory<CSGuildCallMember>(PACKET_TYPE::CSGuildCallMember);
	mPacketTCPFactoryManager->addFactory<CSGuildCallMemberConfirm>(PACKET_TYPE::CSGuildCallMemberConfirm);
	mPacketTCPFactoryManager->addFactory<CSAdventureRandomList>(PACKET_TYPE::CSAdventureRandomList);
	mPacketTCPFactoryManager->addFactory<CSAdventureMissionRandomAll>(PACKET_TYPE::CSAdventureMissionRandomAll);
	mPacketTCPFactoryManager->addFactory<CSAdventureRandomCount>(PACKET_TYPE::CSAdventureRandomCount);
	mPacketTCPFactoryManager->addFactory<CSDownloadByteCount>(PACKET_TYPE::CSDownloadByteCount);
	mPacketTCPFactoryManager->addFactory<CSEnterWuJinJianTa>(PACKET_TYPE::CSEnterWuJinJianTa);
	mPacketTCPFactoryManager->addFactory<CSWuJinJianTaMaxLevel>(PACKET_TYPE::CSWuJinJianTaMaxLevel);
	mPacketTCPFactoryManager->addFactory<CSWuJinJianTaEnterNextLevel>(PACKET_TYPE::CSWuJinJianTaEnterNextLevel);
	mPacketTCPFactoryManager->addFactory<CSWarehouseSort>(PACKET_TYPE::CSWarehouseSort);
	mPacketTCPFactoryManager->addFactory<CSGachaNormal>(PACKET_TYPE::CSGachaNormal);
	mPacketTCPFactoryManager->addFactory<CSGachaHigh>(PACKET_TYPE::CSGachaHigh);
	mPacketTCPFactoryManager->addFactory<CSSeasonServer>(PACKET_TYPE::CSSeasonServer);

	mPacketTCPFactoryManager->addFactory<SCCheckPacketVersion>(PACKET_TYPE::SCCheckPacketVersion);
	mPacketTCPFactoryManager->addFactory<SCServerCheckPing>(PACKET_TYPE::SCServerCheckPing);
	mPacketTCPFactoryManager->addFactory<SCCharacterAddState>(PACKET_TYPE::SCCharacterAddState);
	mPacketTCPFactoryManager->addFactory<SCCharacterDie>(PACKET_TYPE::SCCharacterDie);
	mPacketTCPFactoryManager->addFactory<SCCharacterFullData>(PACKET_TYPE::SCCharacterFullData);
	mPacketTCPFactoryManager->addFactory<SCCharacterFullGameData>(PACKET_TYPE::SCCharacterFullGameData);
	mPacketTCPFactoryManager->addFactory<SCCharacterProperty>(PACKET_TYPE::SCCharacterProperty);
	mPacketTCPFactoryManager->addFactory<SCCharacterRemoveState>(PACKET_TYPE::SCCharacterRemoveState);
	mPacketTCPFactoryManager->addFactory<SCChatBroadcast>(PACKET_TYPE::SCChatBroadcast);
	mPacketTCPFactoryManager->addFactory<SCChatPrivate>(PACKET_TYPE::SCChatPrivate);
	mPacketTCPFactoryManager->addFactory<SCDamageNumber>(PACKET_TYPE::SCDamageNumber);
	mPacketTCPFactoryManager->addFactory<SCErrorCode>(PACKET_TYPE::SCErrorCode);
	mPacketTCPFactoryManager->addFactory<SCExpChanged>(PACKET_TYPE::SCExpChanged);
	mPacketTCPFactoryManager->addFactory<SCGetGold>(PACKET_TYPE::SCGetGold);
	mPacketTCPFactoryManager->addFactory<SCGetGoldIngot>(PACKET_TYPE::SCGetGoldIngot);
	mPacketTCPFactoryManager->addFactory<SCGetObjectItem>(PACKET_TYPE::SCGetObjectItem);
	mPacketTCPFactoryManager->addFactory<SCGoldChanged>(PACKET_TYPE::SCGoldChanged);
	mPacketTCPFactoryManager->addFactory<SCGoldIngotChanged>(PACKET_TYPE::SCGoldIngotChanged);
	mPacketTCPFactoryManager->addFactory<SCHitByOtherPlayer>(PACKET_TYPE::SCHitByOtherPlayer);
	mPacketTCPFactoryManager->addFactory<SCHPChanged>(PACKET_TYPE::SCHPChanged);
	mPacketTCPFactoryManager->addFactory<SCTransferPosition>(PACKET_TYPE::SCTransferPosition);
	mPacketTCPFactoryManager->addFactory<SCItemPropertyBox>(PACKET_TYPE::SCItemPropertyBox);
	mPacketTCPFactoryManager->addFactory<SCItemPropertyConsumable>(PACKET_TYPE::SCItemPropertyConsumable);
	mPacketTCPFactoryManager->addFactory<SCItemPropertyEquip>(PACKET_TYPE::SCItemPropertyEquip);
	mPacketTCPFactoryManager->addFactory<SCItemPropertyMaterial>(PACKET_TYPE::SCItemPropertyMaterial);
	mPacketTCPFactoryManager->addFactory<SCItemPropertySkillBook>(PACKET_TYPE::SCItemPropertySkillBook);
	mPacketTCPFactoryManager->addFactory<SCItemPropertyCard>(PACKET_TYPE::SCItemPropertyCard);
	mPacketTCPFactoryManager->addFactory<SCLearnSkill>(PACKET_TYPE::SCLearnSkill);
	mPacketTCPFactoryManager->addFactory<SCLevelChanged>(PACKET_TYPE::SCLevelChanged);
	mPacketTCPFactoryManager->addFactory<SCMonsterAddState>(PACKET_TYPE::SCMonsterAddState);
	mPacketTCPFactoryManager->addFactory<SCMonsterFireSkill>(PACKET_TYPE::SCMonsterFireSkill);
	mPacketTCPFactoryManager->addFactory<SCMonsterHPChanged>(PACKET_TYPE::SCMonsterHPChanged);
	mPacketTCPFactoryManager->addFactory<SCMonsterInRange>(PACKET_TYPE::SCMonsterInRange);
	mPacketTCPFactoryManager->addFactory<SCMonsterOutRange>(PACKET_TYPE::SCMonsterOutRange);
	mPacketTCPFactoryManager->addFactory<SCMonsterMove>(PACKET_TYPE::SCMonsterMove);
	mPacketTCPFactoryManager->addFactory<SCMonsterRemoveState>(PACKET_TYPE::SCMonsterRemoveState);
	mPacketTCPFactoryManager->addFactory<SCMPChanged>(PACKET_TYPE::SCMPChanged);
	mPacketTCPFactoryManager->addFactory<SCNPCList>(PACKET_TYPE::SCNPCList);
	mPacketTCPFactoryManager->addFactory<SCObjectItemCD>(PACKET_TYPE::SCObjectItemCD);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDie>(PACKET_TYPE::SCOtherPlayerDie);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerAddState>(PACKET_TYPE::SCOtherPlayerAddState);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDirection>(PACKET_TYPE::SCOtherPlayerDirection);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerFireSkill>(PACKET_TYPE::SCOtherPlayerFireSkill);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerHP>(PACKET_TYPE::SCOtherPlayerHP);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerMaxHP>(PACKET_TYPE::SCOtherPlayerMaxHP);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerInRange>(PACKET_TYPE::SCOtherPlayerInRange);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerLeaveMap>(PACKET_TYPE::SCOtherPlayerLeaveMap);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerList>(PACKET_TYPE::SCOtherPlayerList);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerMoveState>(PACKET_TYPE::SCOtherPlayerMoveState);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerOffline>(PACKET_TYPE::SCOtherPlayerOffline);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerOutlook>(PACKET_TYPE::SCOtherPlayerOutlook);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerOutRange>(PACKET_TYPE::SCOtherPlayerOutRange);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerPosition>(PACKET_TYPE::SCOtherPlayerPosition);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerRemoveState>(PACKET_TYPE::SCOtherPlayerRemoveState);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerLogin>(PACKET_TYPE::SCOtherPlayerLogin);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerCrime>(PACKET_TYPE::SCOtherPlayerCrime);
	mPacketTCPFactoryManager->addFactory<SCPackItem>(PACKET_TYPE::SCPackItem);
	mPacketTCPFactoryManager->addFactory<SCPlayerEquipChange>(PACKET_TYPE::SCPlayerEquipChange);
	mPacketTCPFactoryManager->addFactory<SCRecoverHPCycleMax>(PACKET_TYPE::SCRecoverHPCycleMax);
	mPacketTCPFactoryManager->addFactory<SCRecoverMPCycleMax>(PACKET_TYPE::SCRecoverMPCycleMax);
	mPacketTCPFactoryManager->addFactory<SCSkillAssignKey>(PACKET_TYPE::SCSkillAssignKey);
	mPacketTCPFactoryManager->addFactory<SCBuyGoods>(PACKET_TYPE::SCBuyGoods);
	mPacketTCPFactoryManager->addFactory<SCCheckAccount>(PACKET_TYPE::SCCheckAccount);
	mPacketTCPFactoryManager->addFactory<SCCheckName>(PACKET_TYPE::SCCheckName);
	mPacketTCPFactoryManager->addFactory<SCCreateCharacter>(PACKET_TYPE::SCCreateCharacter);
	mPacketTCPFactoryManager->addFactory<SCEnterMap>(PACKET_TYPE::SCEnterMap);
	mPacketTCPFactoryManager->addFactory<SCFireSkill>(PACKET_TYPE::SCFireSkill);
	mPacketTCPFactoryManager->addFactory<SCAccountLogin>(PACKET_TYPE::SCAccountLogin);
	mPacketTCPFactoryManager->addFactory<SCLogoutCharacter>(PACKET_TYPE::SCLogoutCharacter);
	mPacketTCPFactoryManager->addFactory<SCMyselfList>(PACKET_TYPE::SCMyselfList);
	mPacketTCPFactoryManager->addFactory<SCNPCShopGoodsList>(PACKET_TYPE::SCNPCShopGoodsList);
	mPacketTCPFactoryManager->addFactory<SCAccountRegiste>(PACKET_TYPE::SCAccountRegiste);
	mPacketTCPFactoryManager->addFactory<SCPackItemSell>(PACKET_TYPE::SCPackItemSell);
	mPacketTCPFactoryManager->addFactory<SCSceneItemDrop>(PACKET_TYPE::SCSceneItemDrop);
	mPacketTCPFactoryManager->addFactory<SCSceneItemDestroy>(PACKET_TYPE::SCSceneItemDestroy);
	mPacketTCPFactoryManager->addFactory<SCSceneItemInRange>(PACKET_TYPE::SCSceneItemInRange);
	mPacketTCPFactoryManager->addFactory<SCSkillLevelUp>(PACKET_TYPE::SCSkillLevelUp);
	mPacketTCPFactoryManager->addFactory<SCSkillList>(PACKET_TYPE::SCSkillList);
	mPacketTCPFactoryManager->addFactory<SCSkillExp>(PACKET_TYPE::SCSkillExp);
	mPacketTCPFactoryManager->addFactory<SCWarehouseItemList>(PACKET_TYPE::SCWarehouseItemList);
	mPacketTCPFactoryManager->addFactory<SCMissionList>(PACKET_TYPE::SCMissionList);
	mPacketTCPFactoryManager->addFactory<SCAcceptMission>(PACKET_TYPE::SCAcceptMission);
	mPacketTCPFactoryManager->addFactory<SCKillMonster>(PACKET_TYPE::SCKillMonster);
	mPacketTCPFactoryManager->addFactory<SCMissionCompleted>(PACKET_TYPE::SCMissionCompleted);
	mPacketTCPFactoryManager->addFactory<SCMissionGiveup>(PACKET_TYPE::SCMissionGiveup);
	mPacketTCPFactoryManager->addFactory<SCNPCMissionList>(PACKET_TYPE::SCNPCMissionList);
	mPacketTCPFactoryManager->addFactory<SCMailList>(PACKET_TYPE::SCMailList);
	mPacketTCPFactoryManager->addFactory<SCMailReceive>(PACKET_TYPE::SCMailReceive);
	mPacketTCPFactoryManager->addFactory<SCMailDelete>(PACKET_TYPE::SCMailDelete);
	mPacketTCPFactoryManager->addFactory<SCMailSendResult>(PACKET_TYPE::SCMailSendResult);
	mPacketTCPFactoryManager->addFactory<SCMailClearItem>(PACKET_TYPE::SCMailClearItem);
	mPacketTCPFactoryManager->addFactory<SCMailCheckReceiver>(PACKET_TYPE::SCMailCheckReceiver);
	mPacketTCPFactoryManager->addFactory<SCAuctionPutOn>(PACKET_TYPE::SCAuctionPutOn);
	mPacketTCPFactoryManager->addFactory<SCAuctionPutOnList>(PACKET_TYPE::SCAuctionPutOnList);
	mPacketTCPFactoryManager->addFactory<SCAuctionPullOff>(PACKET_TYPE::SCAuctionPullOff);
	mPacketTCPFactoryManager->addFactory<SCAuctionSearchList>(PACKET_TYPE::SCAuctionSearchList);
	mPacketTCPFactoryManager->addFactory<SCAuctionBuy>(PACKET_TYPE::SCAuctionBuy);
	mPacketTCPFactoryManager->addFactory<SCFriendList>(PACKET_TYPE::SCFriendList);
	mPacketTCPFactoryManager->addFactory<SCFriendAddRequest>(PACKET_TYPE::SCFriendAddRequest);
	mPacketTCPFactoryManager->addFactory<SCFriendDelete>(PACKET_TYPE::SCFriendDelete);
	mPacketTCPFactoryManager->addFactory<SCFriendBeenDelete>(PACKET_TYPE::SCFriendBeenDelete);
	mPacketTCPFactoryManager->addFactory<SCFriendBeenAddRequest>(PACKET_TYPE::SCFriendBeenAddRequest);
	mPacketTCPFactoryManager->addFactory<SCFriendAdded>(PACKET_TYPE::SCFriendAdded);
	mPacketTCPFactoryManager->addFactory<SCTeamPlayerInvite>(PACKET_TYPE::SCTeamPlayerInvite);
	mPacketTCPFactoryManager->addFactory<SCTeamCreated>(PACKET_TYPE::SCTeamCreated);
	mPacketTCPFactoryManager->addFactory<SCTeamLeave>(PACKET_TYPE::SCTeamLeave);
	mPacketTCPFactoryManager->addFactory<SCTeamPlayerJoin>(PACKET_TYPE::SCTeamPlayerJoin);
	mPacketTCPFactoryManager->addFactory<SCTeamMemberList>(PACKET_TYPE::SCTeamMemberList);
	mPacketTCPFactoryManager->addFactory<SCTeamJoin>(PACKET_TYPE::SCTeamJoin);
	mPacketTCPFactoryManager->addFactory<SCTeamPlayerLeave>(PACKET_TYPE::SCTeamPlayerLeave);
	mPacketTCPFactoryManager->addFactory<SCTeamPlayerRequestJoin>(PACKET_TYPE::SCTeamPlayerRequestJoin);
	mPacketTCPFactoryManager->addFactory<SCTeamRequestJoin>(PACKET_TYPE::SCTeamRequestJoin);
	mPacketTCPFactoryManager->addFactory<SCTeamInvite>(PACKET_TYPE::SCTeamInvite);
	mPacketTCPFactoryManager->addFactory<SCTeamAllowJoin>(PACKET_TYPE::SCTeamAllowJoin);
	mPacketTCPFactoryManager->addFactory<SCTeamLeader>(PACKET_TYPE::SCTeamLeader);
	mPacketTCPFactoryManager->addFactory<SCTeamBeLeader>(PACKET_TYPE::SCTeamBeLeader);
	mPacketTCPFactoryManager->addFactory<SCGuildAnnouncement>(PACKET_TYPE::SCGuildAnnouncement);
	mPacketTCPFactoryManager->addFactory<SCGuildCreate>(PACKET_TYPE::SCGuildCreate);
	mPacketTCPFactoryManager->addFactory<SCGuildList>(PACKET_TYPE::SCGuildList);
	mPacketTCPFactoryManager->addFactory<SCGuildInfo>(PACKET_TYPE::SCGuildInfo);
	mPacketTCPFactoryManager->addFactory<SCGuildTitle>(PACKET_TYPE::SCGuildTitle);
	mPacketTCPFactoryManager->addFactory<SCGuildDismiss>(PACKET_TYPE::SCGuildDismiss);
	mPacketTCPFactoryManager->addFactory<SCGuildDistribute>(PACKET_TYPE::SCGuildDistribute);
	mPacketTCPFactoryManager->addFactory<SCGuildContribution>(PACKET_TYPE::SCGuildContribution);
	mPacketTCPFactoryManager->addFactory<SCGuildOtherPlayerContribution>(PACKET_TYPE::SCGuildOtherPlayerContribution);
	mPacketTCPFactoryManager->addFactory<SCGuildGold>(PACKET_TYPE::SCGuildGold);
	mPacketTCPFactoryManager->addFactory<SCGuildExp>(PACKET_TYPE::SCGuildExp);
	mPacketTCPFactoryManager->addFactory<SCGuildMemberList>(PACKET_TYPE::SCGuildMemberList);
	mPacketTCPFactoryManager->addFactory<SCGuildBeenInvited>(PACKET_TYPE::SCGuildBeenInvited);
	mPacketTCPFactoryManager->addFactory<SCGuildInvite>(PACKET_TYPE::SCGuildInvite);
	mPacketTCPFactoryManager->addFactory<SCGuildInviteResult>(PACKET_TYPE::SCGuildInviteResult);
	mPacketTCPFactoryManager->addFactory<SCGuildJoin>(PACKET_TYPE::SCGuildJoin);
	mPacketTCPFactoryManager->addFactory<SCGuildOtherPlayerJoin>(PACKET_TYPE::SCGuildOtherPlayerJoin);
	mPacketTCPFactoryManager->addFactory<SCGuildLeave>(PACKET_TYPE::SCGuildLeave);
	mPacketTCPFactoryManager->addFactory<SCGuildOtherPlayerLeave>(PACKET_TYPE::SCGuildOtherPlayerLeave);
	mPacketTCPFactoryManager->addFactory<SCGuildRequestList>(PACKET_TYPE::SCGuildRequestList);
	mPacketTCPFactoryManager->addFactory<SCGuildOtherPlayerRequestJoin>(PACKET_TYPE::SCGuildOtherPlayerRequestJoin);
	mPacketTCPFactoryManager->addFactory<SCGuildRequestResult>(PACKET_TYPE::SCGuildRequestResult);
	mPacketTCPFactoryManager->addFactory<SCGuildOtherPlayerTitle>(PACKET_TYPE::SCGuildOtherPlayerTitle);
	mPacketTCPFactoryManager->addFactory<SCGuildShopGoods>(PACKET_TYPE::SCGuildShopGoods);
	mPacketTCPFactoryManager->addFactory<SCExchangeRequest>(PACKET_TYPE::SCExchangeRequest);
	mPacketTCPFactoryManager->addFactory<SCExchangeRequestResult>(PACKET_TYPE::SCExchangeRequestResult);
	mPacketTCPFactoryManager->addFactory<SCExchangeRefuse>(PACKET_TYPE::SCExchangeRefuse);
	mPacketTCPFactoryManager->addFactory<SCExchangeStart>(PACKET_TYPE::SCExchangeStart);
	mPacketTCPFactoryManager->addFactory<SCExchangeItemList>(PACKET_TYPE::SCExchangeItemList);
	mPacketTCPFactoryManager->addFactory<SCExchangeGold>(PACKET_TYPE::SCExchangeGold);
	mPacketTCPFactoryManager->addFactory<SCExchangeLock>(PACKET_TYPE::SCExchangeLock);
	mPacketTCPFactoryManager->addFactory<SCExchangeDone>(PACKET_TYPE::SCExchangeDone);
	mPacketTCPFactoryManager->addFactory<SCExchangeAskConfirm>(PACKET_TYPE::SCExchangeAskConfirm);
	mPacketTCPFactoryManager->addFactory<SCExchangeCancel>(PACKET_TYPE::SCExchangeCancel);
	mPacketTCPFactoryManager->addFactory<SCExchangeWaitOtherConfirm>(PACKET_TYPE::SCExchangeWaitOtherConfirm);
	mPacketTCPFactoryManager->addFactory<SCAchivementList>(PACKET_TYPE::SCAchivementList);
	mPacketTCPFactoryManager->addFactory<SCAchivementProgress>(PACKET_TYPE::SCAchivementProgress);
	mPacketTCPFactoryManager->addFactory<SCAchivementFinish>(PACKET_TYPE::SCAchivementFinish);
	mPacketTCPFactoryManager->addFactory<SCAchivementReceived>(PACKET_TYPE::SCAchivementReceived);
	mPacketTCPFactoryManager->addFactory<SCPing>(PACKET_TYPE::SCPing);
	mPacketTCPFactoryManager->addFactory<SCSceneSkillList>(PACKET_TYPE::SCSceneSkillList);
	mPacketTCPFactoryManager->addFactory<SCRankList>(PACKET_TYPE::SCRankList);
	mPacketTCPFactoryManager->addFactory<SCEquipStrength>(PACKET_TYPE::SCEquipStrength);
	mPacketTCPFactoryManager->addFactory<SCMonsterDirection>(PACKET_TYPE::SCMonsterDirection);
	mPacketTCPFactoryManager->addFactory<SCMonsterDecisionTree>(PACKET_TYPE::SCMonsterDecisionTree);
	mPacketTCPFactoryManager->addFactory<SCMonsterAction>(PACKET_TYPE::SCMonsterAction);
	mPacketTCPFactoryManager->addFactory<SCClearSkillCD>(PACKET_TYPE::SCClearSkillCD);
	mPacketTCPFactoryManager->addFactory<SCMonsterDestroy>(PACKET_TYPE::SCMonsterDestroy);
	mPacketTCPFactoryManager->addFactory<SCPKMode>(PACKET_TYPE::SCPKMode);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerMoveStart>(PACKET_TYPE::SCOtherPlayerMoveStart);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerMoveEnd>(PACKET_TYPE::SCOtherPlayerMoveEnd);
	mPacketTCPFactoryManager->addFactory<SCCharacterDelete>(PACKET_TYPE::SCCharacterDelete);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDigMineStart>(PACKET_TYPE::SCOtherPlayerDigMineStart);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDigMineEnd>(PACKET_TYPE::SCOtherPlayerDigMineEnd);
	mPacketTCPFactoryManager->addFactory<SCDigMineStart>(PACKET_TYPE::SCDigMineStart);
	mPacketTCPFactoryManager->addFactory<SCDigMineEnd>(PACKET_TYPE::SCDigMineEnd);
	mPacketTCPFactoryManager->addFactory<SCEquipCollectionList>(PACKET_TYPE::SCEquipCollectionList);
	mPacketTCPFactoryManager->addFactory<SCEquipCollected>(PACKET_TYPE::SCEquipCollected);
	mPacketTCPFactoryManager->addFactory<SCMonsterToSummon>(PACKET_TYPE::SCMonsterToSummon);
	mPacketTCPFactoryManager->addFactory<SCNPCAddState>(PACKET_TYPE::SCNPCAddState);
	mPacketTCPFactoryManager->addFactory<SCNPCRemoveState>(PACKET_TYPE::SCNPCRemoveState);
	mPacketTCPFactoryManager->addFactory<SCNPCDestroy>(PACKET_TYPE::SCNPCDestroy);
	mPacketTCPFactoryManager->addFactory<SCDetectPlayerLocation>(PACKET_TYPE::SCDetectPlayerLocation);
	mPacketTCPFactoryManager->addFactory<SCPackMaxWeight>(PACKET_TYPE::SCPackMaxWeight);
	mPacketTCPFactoryManager->addFactory<SCStarEquipComposite>(PACKET_TYPE::SCStarEquipComposite);
	mPacketTCPFactoryManager->addFactory<SCServerDump>(PACKET_TYPE::SCServerDump);
	mPacketTCPFactoryManager->addFactory<SCServerHelp>(PACKET_TYPE::SCServerHelp);
	mPacketTCPFactoryManager->addFactory<SCAccountFreeze>(PACKET_TYPE::SCAccountFreeze);
	mPacketTCPFactoryManager->addFactory<SCDropLucky>(PACKET_TYPE::SCDropLucky);
	mPacketTCPFactoryManager->addFactory<SCAuctionOtherSupposedPrice>(PACKET_TYPE::SCAuctionOtherSupposedPrice);
	mPacketTCPFactoryManager->addFactory<SCGlobalEquipCount>(PACKET_TYPE::SCGlobalEquipCount);
	mPacketTCPFactoryManager->addFactory<SCGameSettingPlayer>(PACKET_TYPE::SCGameSettingPlayer);
	mPacketTCPFactoryManager->addFactory<SCGameSettingSystem>(PACKET_TYPE::SCGameSettingSystem);
	mPacketTCPFactoryManager->addFactory<SCClearEquipProficiency>(PACKET_TYPE::SCClearEquipProficiency);
	mPacketTCPFactoryManager->addFactory<SCEnvironmentFireSkill>(PACKET_TYPE::SCEnvironmentFireSkill);
	mPacketTCPFactoryManager->addFactory<SCGlobalEnvironmentList>(PACKET_TYPE::SCGlobalEnvironmentList);
	mPacketTCPFactoryManager->addFactory<SCSceneEnvironmentList>(PACKET_TYPE::SCSceneEnvironmentList);
	mPacketTCPFactoryManager->addFactory<SCEquipRepairWithItem>(PACKET_TYPE::SCEquipRepairWithItem);
	mPacketTCPFactoryManager->addFactory<SCShoppingMallList>(PACKET_TYPE::SCShoppingMallList);
	mPacketTCPFactoryManager->addFactory<SCBuyShoppingMallGoods>(PACKET_TYPE::SCBuyShoppingMallGoods);
	mPacketTCPFactoryManager->addFactory<SCShoppingMallBuyCount>(PACKET_TYPE::SCShoppingMallBuyCount);
	mPacketTCPFactoryManager->addFactory<SCMissionConditionProgress>(PACKET_TYPE::SCMissionConditionProgress);
	mPacketTCPFactoryManager->addFactory<SCWillCloseServer>(PACKET_TYPE::SCWillCloseServer);
	mPacketTCPFactoryManager->addFactory<SCMessage>(PACKET_TYPE::SCMessage);
	mPacketTCPFactoryManager->addFactory<SCResetPassword>(PACKET_TYPE::SCResetPassword);
	mPacketTCPFactoryManager->addFactory<SCCharacterAddupData>(PACKET_TYPE::SCCharacterAddupData);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerStrengthEquip>(PACKET_TYPE::SCOtherPlayerStrengthEquip);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerMonsterDrop>(PACKET_TYPE::SCOtherPlayerMonsterDrop);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerMonsterDropLucky>(PACKET_TYPE::SCOtherPlayerMonsterDropLucky);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerWeaponLucky>(PACKET_TYPE::SCOtherPlayerWeaponLucky);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerCompositeEquip>(PACKET_TYPE::SCOtherPlayerCompositeEquip);
	mPacketTCPFactoryManager->addFactory<SCShoppingMallRefresh>(PACKET_TYPE::SCShoppingMallRefresh);
	mPacketTCPFactoryManager->addFactory<SCExpandBackpack>(PACKET_TYPE::SCExpandBackpack);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerStateList>(PACKET_TYPE::SCOtherPlayerStateList);
	mPacketTCPFactoryManager->addFactory<SCDieProcessed>(PACKET_TYPE::SCDieProcessed);
	mPacketTCPFactoryManager->addFactory<SCStateList>(PACKET_TYPE::SCStateList);
	mPacketTCPFactoryManager->addFactory<SCResetPreciousValue>(PACKET_TYPE::SCResetPreciousValue);
	mPacketTCPFactoryManager->addFactory<SCDecomposeEquip>(PACKET_TYPE::SCDecomposeEquip);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerPKMode>(PACKET_TYPE::SCOtherPlayerPKMode);
	mPacketTCPFactoryManager->addFactory<SCUsableMineTime>(PACKET_TYPE::SCUsableMineTime);
	mPacketTCPFactoryManager->addFactory<SCExpandWarehouse>(PACKET_TYPE::SCExpandWarehouse);
	mPacketTCPFactoryManager->addFactory<SCBuyQuickSellCount>(PACKET_TYPE::SCBuyQuickSellCount);
	mPacketTCPFactoryManager->addFactory<SCQuickSellCount>(PACKET_TYPE::SCQuickSellCount);
	mPacketTCPFactoryManager->addFactory<SCGuildMemberListStart>(PACKET_TYPE::SCGuildMemberListStart);
	mPacketTCPFactoryManager->addFactory<SCSecondaryPasswordState>(PACKET_TYPE::SCSecondaryPasswordState);
	mPacketTCPFactoryManager->addFactory<SCSecondaryPasswordConfirm>(PACKET_TYPE::SCSecondaryPasswordConfirm);
	mPacketTCPFactoryManager->addFactory<SCKillPlayer>(PACKET_TYPE::SCKillPlayer);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardList>(PACKET_TYPE::SCOfferRewardList);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardAcceptedList>(PACKET_TYPE::SCOfferRewardAcceptedList);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardPutOnList>(PACKET_TYPE::SCOfferRewardPutOnList);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardPutOn>(PACKET_TYPE::SCOfferRewardPutOn);
	mPacketTCPFactoryManager->addFactory<SCPlayerName>(PACKET_TYPE::SCPlayerName);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardAccept>(PACKET_TYPE::SCOfferRewardAccept);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardGiveup>(PACKET_TYPE::SCOfferRewardGiveup);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardSubmit>(PACKET_TYPE::SCOfferRewardSubmit);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardFinish>(PACKET_TYPE::SCOfferRewardFinish);
	mPacketTCPFactoryManager->addFactory<SCOfferRewardFinishByOtherPlayer>(PACKET_TYPE::SCOfferRewardFinishByOtherPlayer);
	mPacketTCPFactoryManager->addFactory<SCDebugFreezeAccountResult>(PACKET_TYPE::SCDebugFreezeAccountResult);
	mPacketTCPFactoryManager->addFactory<SCDebugChangePlayerPayExpiration>(PACKET_TYPE::SCDebugChangePlayerPayExpiration);
	mPacketTCPFactoryManager->addFactory<SCExchangeAuctionRateDiscount>(PACKET_TYPE::SCExchangeAuctionRateDiscount);
	mPacketTCPFactoryManager->addFactory<SCAuctionRateDiscount>(PACKET_TYPE::SCAuctionRateDiscount);
	mPacketTCPFactoryManager->addFactory<SCSceneItemPosition>(PACKET_TYPE::SCSceneItemPosition);
	mPacketTCPFactoryManager->addFactory<SCQQGet>(PACKET_TYPE::SCQQGet);
	mPacketTCPFactoryManager->addFactory<SCGuildLevelUp>(PACKET_TYPE::SCGuildLevelUp);
	mPacketTCPFactoryManager->addFactory<SCGuildLevel>(PACKET_TYPE::SCGuildLevel);
	mPacketTCPFactoryManager->addFactory<SCDebugInfo>(PACKET_TYPE::SCDebugInfo);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityInfo>(PACKET_TYPE::SCTerritoryActivityInfo);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivitySignUp>(PACKET_TYPE::SCTerritoryActivitySignUp);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivitySignupStart>(PACKET_TYPE::SCTerritoryActivitySignupStart);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivitySignupSuccess>(PACKET_TYPE::SCTerritoryActivitySignupSuccess);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivitySignupEnd>(PACKET_TYPE::SCTerritoryActivitySignupEnd);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityPrepareStart>(PACKET_TYPE::SCTerritoryActivityPrepareStart);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityingStart>(PACKET_TYPE::SCTerritoryActivityingStart);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityingRemainTime>(PACKET_TYPE::SCTerritoryActivityingRemainTime);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityingTip>(PACKET_TYPE::SCTerritoryActivityingTip);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityingScoreList>(PACKET_TYPE::SCTerritoryActivityingScoreList);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityingEnd>(PACKET_TYPE::SCTerritoryActivityingEnd);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityMemberScoreList>(PACKET_TYPE::SCTerritoryActivityMemberScoreList);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityWinner>(PACKET_TYPE::SCTerritoryActivityWinner);
	mPacketTCPFactoryManager->addFactory<SCTerritoryMapInfo>(PACKET_TYPE::SCTerritoryMapInfo);
	mPacketTCPFactoryManager->addFactory<SCGuildTerritoryGoldUpgraded>(PACKET_TYPE::SCGuildTerritoryGoldUpgraded);
	mPacketTCPFactoryManager->addFactory<SCGuildTerritoryExpUpgraded>(PACKET_TYPE::SCGuildTerritoryExpUpgraded);
	mPacketTCPFactoryManager->addFactory<SCGuildTerritoryDropProtectUpgraded>(PACKET_TYPE::SCGuildTerritoryDropProtectUpgraded);
	mPacketTCPFactoryManager->addFactory<SCOfflineExp>(PACKET_TYPE::SCOfflineExp);
	mPacketTCPFactoryManager->addFactory<SCTerritoryActivityKillPlayer>(PACKET_TYPE::SCTerritoryActivityKillPlayer);
	mPacketTCPFactoryManager->addFactory<SCDieDropItem>(PACKET_TYPE::SCDieDropItem);
	mPacketTCPFactoryManager->addFactory<SCChangeName>(PACKET_TYPE::SCChangeName);
	mPacketTCPFactoryManager->addFactory<SCEquipUseCard>(PACKET_TYPE::SCEquipUseCard);
	mPacketTCPFactoryManager->addFactory<SCGuildSalaryReceiveInfo>(PACKET_TYPE::SCGuildSalaryReceiveInfo);
	mPacketTCPFactoryManager->addFactory<SCGuildSalaryReceive>(PACKET_TYPE::SCGuildSalaryReceive);
	mPacketTCPFactoryManager->addFactory<SCCheckExe>(PACKET_TYPE::SCCheckExe);
	mPacketTCPFactoryManager->addFactory<SCEquipLock>(PACKET_TYPE::SCEquipLock);
	mPacketTCPFactoryManager->addFactory<SCEquipUnlock>(PACKET_TYPE::SCEquipUnlock);
	mPacketTCPFactoryManager->addFactory<SCBuyQuickDecomposeCount>(PACKET_TYPE::SCBuyQuickDecomposeCount);
	mPacketTCPFactoryManager->addFactory<SCQuickDecomposeCount>(PACKET_TYPE::SCQuickDecomposeCount);
	mPacketTCPFactoryManager->addFactory<SCMonsterWar>(PACKET_TYPE::SCMonsterWar);
	mPacketTCPFactoryManager->addFactory<SCTransferPreciousValue>(PACKET_TYPE::SCTransferPreciousValue);
	mPacketTCPFactoryManager->addFactory<SCIncreaseCrime>(PACKET_TYPE::SCIncreaseCrime);
	mPacketTCPFactoryManager->addFactory<SCItemOutofDate>(PACKET_TYPE::SCItemOutofDate);
	mPacketTCPFactoryManager->addFactory<SCQQBindVerifyTip>(PACKET_TYPE::SCQQBindVerifyTip);
	mPacketTCPFactoryManager->addFactory<SCQQBindVerify>(PACKET_TYPE::SCQQBindVerify);
	mPacketTCPFactoryManager->addFactory<SCAuctionAveragePrice>(PACKET_TYPE::SCAuctionAveragePrice);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleEnroll>(PACKET_TYPE::SCShabakeBattleEnroll);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleEnrollEnd>(PACKET_TYPE::SCShabakeBattleEnrollEnd);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleFightingStart>(PACKET_TYPE::SCShabakeBattleFightingStart);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleFightingStage>(PACKET_TYPE::SCShabakeBattleFightingStage);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleFightingScore>(PACKET_TYPE::SCShabakeBattleFightingScore);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleFightingEnd>(PACKET_TYPE::SCShabakeBattleFightingEnd);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleWinner>(PACKET_TYPE::SCShabakeBattleWinner);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleKillPlayer>(PACKET_TYPE::SCShabakeBattleKillPlayer);
	mPacketTCPFactoryManager->addFactory<SCQQUnVerifyTip>(PACKET_TYPE::SCQQUnVerifyTip);
	mPacketTCPFactoryManager->addFactory<SCBossDropProtectCount>(PACKET_TYPE::SCBossDropProtectCount);
	mPacketTCPFactoryManager->addFactory<SCBuyBossDropProtectCount>(PACKET_TYPE::SCBuyBossDropProtectCount);
	mPacketTCPFactoryManager->addFactory<SCBossDropProtectTip>(PACKET_TYPE::SCBossDropProtectTip);
	mPacketTCPFactoryManager->addFactory<SCQQMailProtect>(PACKET_TYPE::SCQQMailProtect);
	mPacketTCPFactoryManager->addFactory<SCQQMailProtectStatus>(PACKET_TYPE::SCQQMailProtectStatus);
	mPacketTCPFactoryManager->addFactory<SCEnterSceneCopy>(PACKET_TYPE::SCEnterSceneCopy);
	mPacketTCPFactoryManager->addFactory<SCLeaveSceneCopy>(PACKET_TYPE::SCLeaveSceneCopy);
	mPacketTCPFactoryManager->addFactory<SCSceneTransferPoint>(PACKET_TYPE::SCSceneTransferPoint);
	mPacketTCPFactoryManager->addFactory<SCSceneTransferPointActive>(PACKET_TYPE::SCSceneTransferPointActive);
	mPacketTCPFactoryManager->addFactory<SCSceneTransferPointDeactive>(PACKET_TYPE::SCSceneTransferPointDeactive);
	mPacketTCPFactoryManager->addFactory<SCTeamPickItemRandom>(PACKET_TYPE::SCTeamPickItemRandom);
	mPacketTCPFactoryManager->addFactory<SCGhostFollowPlayer>(PACKET_TYPE::SCGhostFollowPlayer);
	mPacketTCPFactoryManager->addFactory<SCSceneCopyFinish>(PACKET_TYPE::SCSceneCopyFinish);
	mPacketTCPFactoryManager->addFactory<SCPKMatch>(PACKET_TYPE::SCPKMatch);
	mPacketTCPFactoryManager->addFactory<SCPKMatchResult>(PACKET_TYPE::SCPKMatchResult);
	mPacketTCPFactoryManager->addFactory<SCPKEnterArena>(PACKET_TYPE::SCPKEnterArena);
	mPacketTCPFactoryManager->addFactory<SCPKCountingStart>(PACKET_TYPE::SCPKCountingStart);
	mPacketTCPFactoryManager->addFactory<SCPKFightingStart>(PACKET_TYPE::SCPKFightingStart);
	mPacketTCPFactoryManager->addFactory<SCPKFightingEnd>(PACKET_TYPE::SCPKFightingEnd);
	mPacketTCPFactoryManager->addFactory<SCPKSettlement>(PACKET_TYPE::SCPKSettlement);
	mPacketTCPFactoryManager->addFactory<SCPKExit>(PACKET_TYPE::SCPKExit);
	mPacketTCPFactoryManager->addFactory<SCPKArenaScore>(PACKET_TYPE::SCPKArenaScore);
	mPacketTCPFactoryManager->addFactory<SCShabakeBattleFightingInfo>(PACKET_TYPE::SCShabakeBattleFightingInfo);
	mPacketTCPFactoryManager->addFactory<SCPKGold>(PACKET_TYPE::SCPKGold);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeList>(PACKET_TYPE::SCRedEnvelopeList);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeGrab>(PACKET_TYPE::SCRedEnvelopeGrab);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeDetail>(PACKET_TYPE::SCRedEnvelopeDetail);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeDispatch>(PACKET_TYPE::SCRedEnvelopeDispatch);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeGrabDone>(PACKET_TYPE::SCRedEnvelopeGrabDone);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeSimple>(PACKET_TYPE::SCRedEnvelopeSimple);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeOtherDispatch>(PACKET_TYPE::SCRedEnvelopeOtherDispatch);
	mPacketTCPFactoryManager->addFactory<SCRedEnvelopeOtherGrab>(PACKET_TYPE::SCRedEnvelopeOtherGrab);
	mPacketTCPFactoryManager->addFactory<SCFindPassword>(PACKET_TYPE::SCFindPassword);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerMakeHighMedal>(PACKET_TYPE::SCOtherPlayerMakeHighMedal);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseList>(PACKET_TYPE::SCTreasureHouseList);
	mPacketTCPFactoryManager->addFactory<SCTreasureHousePutOnResult>(PACKET_TYPE::SCTreasureHousePutOnResult);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseMyselfPutOn>(PACKET_TYPE::SCTreasureHouseMyselfPutOn);
	mPacketTCPFactoryManager->addFactory<SCTreasureHousePullOff>(PACKET_TYPE::SCTreasureHousePullOff);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerBackpack>(PACKET_TYPE::SCOtherPlayerBackpack);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerWarehouse>(PACKET_TYPE::SCOtherPlayerWarehouse);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseWantBuy>(PACKET_TYPE::SCTreasureHouseWantBuy);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseOtherWantBuy>(PACKET_TYPE::SCTreasureHouseOtherWantBuy);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseWantBuyList>(PACKET_TYPE::SCTreasureHouseWantBuyList);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseSellerDeal>(PACKET_TYPE::SCTreasureHouseSellerDeal);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseSellerRefuse>(PACKET_TYPE::SCTreasureHouseSellerRefuse);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseDealOther>(PACKET_TYPE::SCTreasureHouseDealOther);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseRefuseOther>(PACKET_TYPE::SCTreasureHouseRefuseOther);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseStartFillBuyAccountNeedInfo>(PACKET_TYPE::SCTreasureHouseStartFillBuyAccountNeedInfo);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseBuyerFinishAccountInfo>(PACKET_TYPE::SCTreasureHouseBuyerFinishAccountInfo);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseAccountSellReady>(PACKET_TYPE::SCTreasureHouseAccountSellReady);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseMyWantBuyList>(PACKET_TYPE::SCTreasureHouseMyWantBuyList);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseCancelWantBuy>(PACKET_TYPE::SCTreasureHouseCancelWantBuy);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseReviewList>(PACKET_TYPE::SCTreasureHouseReviewList);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseReviewSuccess>(PACKET_TYPE::SCTreasureHouseReviewSuccess);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseLockAccount>(PACKET_TYPE::SCTreasureHouseLockAccount);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseSellDetail>(PACKET_TYPE::SCTreasureHouseSellDetail);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseBuyAccountNeedInfo>(PACKET_TYPE::SCTreasureHouseBuyAccountNeedInfo);
	mPacketTCPFactoryManager->addFactory<SCTreasureHouseForcePullOff>(PACKET_TYPE::SCTreasureHouseForcePullOff);
	mPacketTCPFactoryManager->addFactory<SCValidatePosition>(PACKET_TYPE::SCValidatePosition);
	mPacketTCPFactoryManager->addFactory<SCSkillCD>(PACKET_TYPE::SCSkillCD);
	mPacketTCPFactoryManager->addFactory<SCCharacterCurDayData>(PACKET_TYPE::SCCharacterCurDayData);
	mPacketTCPFactoryManager->addFactory<SCMapLockState>(PACKET_TYPE::SCMapLockState);
	mPacketTCPFactoryManager->addFactory<SCMapUnlock>(PACKET_TYPE::SCMapUnlock);
	mPacketTCPFactoryManager->addFactory<SCKillOtherDropItem>(PACKET_TYPE::SCKillOtherDropItem);
	mPacketTCPFactoryManager->addFactory<SCBlackListAdd>(PACKET_TYPE::SCBlackListAdd);
	mPacketTCPFactoryManager->addFactory<SCBlackListRemove>(PACKET_TYPE::SCBlackListRemove);
	mPacketTCPFactoryManager->addFactory<SCBlackList>(PACKET_TYPE::SCBlackList);
	mPacketTCPFactoryManager->addFactory<SCWorldBossStart>(PACKET_TYPE::SCWorldBossStart);
	mPacketTCPFactoryManager->addFactory<SCWorldBossEnd>(PACKET_TYPE::SCWorldBossEnd);
	mPacketTCPFactoryManager->addFactory<SCWorldBossDamageRank>(PACKET_TYPE::SCWorldBossDamageRank);
	mPacketTCPFactoryManager->addFactory<SCWorldBossSelfDamage>(PACKET_TYPE::SCWorldBossSelfDamage);
	mPacketTCPFactoryManager->addFactory<SCLotteryTicketReward>(PACKET_TYPE::SCLotteryTicketReward);
	mPacketTCPFactoryManager->addFactory<SCLotteryTicketOtherPlayerReward>(PACKET_TYPE::SCLotteryTicketOtherPlayerReward);
	mPacketTCPFactoryManager->addFactory<SCLotteryTicketState>(PACKET_TYPE::SCLotteryTicketState);
	mPacketTCPFactoryManager->addFactory<SCLotteryTicketSelect>(PACKET_TYPE::SCLotteryTicketSelect);
	mPacketTCPFactoryManager->addFactory<SCNPCShopGoodsBuyCount>(PACKET_TYPE::SCNPCShopGoodsBuyCount);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDataSimple>(PACKET_TYPE::SCOtherPlayerDataSimple);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDataTeamView>(PACKET_TYPE::SCOtherPlayerDataTeamView);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDataScene>(PACKET_TYPE::SCOtherPlayerDataScene);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerDataPKArenaView>(PACKET_TYPE::SCOtherPlayerDataPKArenaView);
	mPacketTCPFactoryManager->addFactory<SCWeaponLuckyDown>(PACKET_TYPE::SCWeaponLuckyDown);
	mPacketTCPFactoryManager->addFactory<SCGameVerifyStart>(PACKET_TYPE::SCGameVerifyStart);
	mPacketTCPFactoryManager->addFactory<SCGameVerifyFinish>(PACKET_TYPE::SCGameVerifyFinish);
	mPacketTCPFactoryManager->addFactory<SCEquipConsecration>(PACKET_TYPE::SCEquipConsecration);
	mPacketTCPFactoryManager->addFactory<SCOtherPlayerEquipConsecration>(PACKET_TYPE::SCOtherPlayerEquipConsecration);
	mPacketTCPFactoryManager->addFactory<SCEquipInjectPower>(PACKET_TYPE::SCEquipInjectPower);
	mPacketTCPFactoryManager->addFactory<SCSecondaryPasswordFetchVerify>(PACKET_TYPE::SCSecondaryPasswordFetchVerify);
	mPacketTCPFactoryManager->addFactory<SCSecondaryPasswordReset>(PACKET_TYPE::SCSecondaryPasswordReset);
	mPacketTCPFactoryManager->addFactory<SCTeamCallMember>(PACKET_TYPE::SCTeamCallMember);
	mPacketTCPFactoryManager->addFactory<SCTeamOtherMemberCall>(PACKET_TYPE::SCTeamOtherMemberCall);
	mPacketTCPFactoryManager->addFactory<SCGuildCallMember>(PACKET_TYPE::SCGuildCallMember);
	mPacketTCPFactoryManager->addFactory<SCGuildOtherMemberCall>(PACKET_TYPE::SCGuildOtherMemberCall);
	mPacketTCPFactoryManager->addFactory<SCSummonAdd>(PACKET_TYPE::SCSummonAdd);
	mPacketTCPFactoryManager->addFactory<SCSummonRemove>(PACKET_TYPE::SCSummonRemove);
	mPacketTCPFactoryManager->addFactory<SCAdventureList>(PACKET_TYPE::SCAdventureList);
	mPacketTCPFactoryManager->addFactory<SCAdventureRandomCount>(PACKET_TYPE::SCAdventureRandomCount);
	mPacketTCPFactoryManager->addFactory<SCGameVerifyPunishing>(PACKET_TYPE::SCGameVerifyPunishing);
	mPacketTCPFactoryManager->addFactory<SCGameVerifyPunishEnd>(PACKET_TYPE::SCGameVerifyPunishEnd);
	mPacketTCPFactoryManager->addFactory<SCSkillFirePunishing>(PACKET_TYPE::SCSkillFirePunishing);
	mPacketTCPFactoryManager->addFactory<SCSkillFirePunishEnd>(PACKET_TYPE::SCSkillFirePunishEnd);
	mPacketTCPFactoryManager->addFactory<SCMovePunishing>(PACKET_TYPE::SCMovePunishing);
	mPacketTCPFactoryManager->addFactory<SCMovePunishEnd>(PACKET_TYPE::SCMovePunishEnd);
	mPacketTCPFactoryManager->addFactory<SCWuJinJianTaInfo>(PACKET_TYPE::SCWuJinJianTaInfo);
	mPacketTCPFactoryManager->addFactory<SCWuJinJianTaFinishLevel>(PACKET_TYPE::SCWuJinJianTaFinishLevel);
	mPacketTCPFactoryManager->addFactory<SCWuJinJianTaFailed>(PACKET_TYPE::SCWuJinJianTaFailed);
	mPacketTCPFactoryManager->addFactory<SCWuJinJianTaMaxLevel>(PACKET_TYPE::SCWuJinJianTaMaxLevel);
	mPacketTCPFactoryManager->addFactory<SCDieProtectByDontDropItem>(PACKET_TYPE::SCDieProtectByDontDropItem);
	mPacketTCPFactoryManager->addFactory<SCGetItemTip>(PACKET_TYPE::SCGetItemTip);
	mPacketTCPFactoryManager->addFactory<SCStealOtherGold>(PACKET_TYPE::SCStealOtherGold);
	mPacketTCPFactoryManager->addFactory<SCPackItemUse>(PACKET_TYPE::SCPackItemUse);
	mPacketTCPFactoryManager->addFactory<SCOtherGachaGetItem>(PACKET_TYPE::SCOtherGachaGetItem);
	mPacketTCPFactoryManager->addFactory<SCResetPosition>(PACKET_TYPE::SCResetPosition);
	mPacketTCPFactoryManager->addFactory<SCSeasonServer>(PACKET_TYPE::SCSeasonServer);
	mPacketTCPFactoryManager->addFactory<SCSceneCopyBossCount>(PACKET_TYPE::SCSceneCopyBossCount);
	mPacketTCPFactoryManager->addFactory<SCDailyKillBossReachMax>(PACKET_TYPE::SCDailyKillBossReachMax);
};